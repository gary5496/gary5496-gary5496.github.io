<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>ABAP development for Status Management in SAP</title>
      <link href="/2018/03/sap-status-functions/"/>
      <content type="html"><![CDATA[<p>Below you will find some objects which is useful when you are performing ABAP development for status management in SAP.</p><h3 id="Function-Modules"><a href="#Function-Modules" class="headerlink" title="Function Modules"></a>Function Modules</h3><ol><li><code>STATUS_READ</code>: With this function, you can get the system status and user status internal codes, such as <code>I0001</code>, <code>E0001</code>.</li><li><code>STATUS_TEXT_EDIT</code>: With this function, you can get the external status code <code>REL</code> <code>APPR</code> for one object. In an update transaction, if you set the input parameter <code>BYPASS_BUFFER</code> to <code>X</code>, it will get the old status code from database. If you set the input parameter <code>BYPASS_BUFFER</code> to blank, it will get the new status code after the change.</li><li><code>STATUS_CHANGE_INTERN</code>: With this function, you can update the system status.</li><li><code>STATUS_CHANGE_EXTERN</code>: With this function, you can update the user status.</li><li><code>STATUS_CHANGES_GET</code>: With this function, you can get the status changes in the current update transaction.</li></ol><h3 id="Tables"><a href="#Tables" class="headerlink" title="Tables"></a>Tables</h3><ol><li><code>JSTO</code>: Status object information. It contains the status profile and object category for one object.</li><li><code>JEST</code>: Individual Object Status. It contains the object status information. Field <code>INACT</code> indicates whether the status is active or not.</li><li><code>TJ02T</code>: System status texts. It contains the external status code and description for one system status, which is <code>INNNN</code>.</li><li><code>TJ30T</code>: Texts for User Status. It contains the external status code and description for one user status, which is <code>ENNNN</code>. </li><li><code>JCDS</code>: Change Documents for system/user status. It contains the change documents for status management.</li></ol><h3 id="T-codes"><a href="#T-codes" class="headerlink" title="T-codes"></a>T-codes</h3><ol><li><code>BS23</code>: Display system status</li><li><code>BS03</code>: Display status profile (user status)</li></ol><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ul><li>You can use <code>Authorization key</code> to control the authorization to update user status. If the auth key is assigned to one user status in status profile, the authorization with auth object <code>B_USERSTAT</code> and auth key should be assigned to the user, so that one is able to update the user status. </li></ul>]]></content>
      
      <categories>
          
          <category> SAP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAP </tag>
            
            <tag> ABAP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Async and Await Keywords in JavaScript</title>
      <link href="/2018/03/javascript-await-async/"/>
      <content type="html"><![CDATA[<h3 id="Async-Await"><a href="#Async-Await" class="headerlink" title="Async/Await"></a>Async/Await</h3><p>To better understand the behavior of async and await keywords in JavaScript, I have written the below code and check the result.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> util = <span class="built_in">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="comment">// Convert fs.readFile into Promise version of same    </span></span><br><span class="line"><span class="keyword">const</span> readFile = util.promisify(fs.readFile);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">asyncReadfile1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"The await async function to read file 1 is called"</span>);</span><br><span class="line">  <span class="keyword">const</span> text = <span class="keyword">await</span> readFile(<span class="string">"C:/Download/129.xps"</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'The file 1 contains: '</span> + text.length + <span class="string">' bytes'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">asyncReadfile2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"The await async function to read file 2 is called"</span>);</span><br><span class="line">  <span class="keyword">const</span> text =<span class="keyword">await</span> readFile(<span class="string">"C:/Download/141.xps"</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'The file 2 contains: '</span> + text.length + <span class="string">' bytes'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">asyncMain</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">await</span> asyncReadfile1();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Processing between reading 2 files"</span>);  </span><br><span class="line">  <span class="keyword">await</span> asyncReadfile2();</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"successful"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Start processing..."</span>);</span><br><span class="line">asyncMain().then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"The async main function is called "</span> + result); </span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Go to the next statement after the async main function"</span>);</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ node app.js</span><br><span class="line"><span class="keyword">Start</span> processing...</span><br><span class="line">The await async <span class="keyword">function</span> <span class="keyword">to</span> <span class="keyword">read</span> <span class="keyword">file</span> <span class="number">1</span> <span class="keyword">is</span> called</span><br><span class="line"><span class="keyword">Go</span> <span class="keyword">to</span> the <span class="keyword">next</span> <span class="keyword">statement</span> <span class="keyword">after</span> the async <span class="keyword">main</span> <span class="keyword">function</span></span><br><span class="line">The <span class="keyword">file</span> <span class="number">1</span> contains: <span class="number">251610</span> <span class="keyword">bytes</span></span><br><span class="line">Processing <span class="keyword">between</span> reading <span class="number">2</span> files</span><br><span class="line">The await async <span class="keyword">function</span> <span class="keyword">to</span> <span class="keyword">read</span> <span class="keyword">file</span> <span class="number">2</span> <span class="keyword">is</span> called</span><br><span class="line">The <span class="keyword">file</span> <span class="number">2</span> contains: <span class="number">549337</span> <span class="keyword">bytes</span></span><br><span class="line">The async <span class="keyword">main</span> <span class="keyword">function</span> <span class="keyword">is</span> called successful</span><br></pre></td></tr></table></figure><p>Here are the processing steps for the above example.</p><ol><li>The runtime engine will call main function <code>asyncMain</code>, which will in turn call the first <code>await</code> async function <code>asyncReadfile1</code> , which will output console log <code>The await async function to read file 1 is called</code></li><li>When the function <code>asyncReadfile1</code> runs to the statement <code>const text = await readFile(&quot;C:/Download/129.xps&quot;);</code>, the Promise object returned from <code>readFile</code> is <em>not resolved</em> yet, so the execution stack will go back to upper function <code>asyncMain</code>. In the main function, the Promise object returned from <code>asyncReadfile1</code> is <em>not resolved</em> yet, so the executation stack will go back to upper level. Therefore, the next console log is <code>Go to the next statement after the async main function</code>.</li><li>When the sync processing logic in the upmost level is completed, the call stack goes back to deepest unresolved Promise function <code>asyncReadfile1</code>. In the async function <code>asyncReadfile1</code>, the statement <code>const text = await readFile(&quot;C:/Download/129.xps&quot;);</code> is completed and the Promise object is <em>resolved</em>, so it will continue with the next statement, and the next console log is <code>The file 1 contains: 251610 bytes</code>. After the console log, the Promise object of async function <code>asyncReadfile1</code> is <em>resolved</em>.</li><li>Since the promise object of async function <code>asyncReadfile1</code> is <em>resolved</em>, the main function will continue with next statement, which will output console log <code>Processing between reading 2 files</code>.</li><li>In the next statement of main function, async function <code>asyncReadfile2</code> wil be called, and the console log will be <code>The await async function to read file 2 is called</code> and <code>The file 2 contains: 549337 bytes</code></li><li>After the return statement of main function, the Promise object of the main function is <em>resolved</em>, so the callback function in <code>Promise.prototype.then</code> method will be executed to output console log <code>The async main function is called successful</code></li></ol><h3 id="Understanding-for-async-await"><a href="#Understanding-for-async-await" class="headerlink" title="Understanding for async/await:"></a>Understanding for async/await:</h3><ol><li>When the Promise object returned from <code>await</code> child function is <em>not resolved</em> yet, the execution stack will go back to parent function.</li><li>When the Promise object returned from <code>await</code> child function is <em>resolved</em>, the execution stack will continue with next statement in the current function.</li><li>When the sync processing logic in the upmost level is completed, the call stack goes back to deepest unresolved Promise function.</li></ol><h3 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h3><p>To achieve the same functionality with Promise object, we would need to more complex code with nested <code>Promise.prototype.then</code> method.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> util = <span class="built_in">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="comment">// Convert fs.readFile into Promise version of same    </span></span><br><span class="line"><span class="keyword">const</span> readFile = util.promisify(fs.readFile);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asyncReadfile1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"The await async function to read file 1 is called"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123; </span><br><span class="line">    readFile(<span class="string">"C:/Download/129.xps"</span>).then( <span class="function">(<span class="params">text</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'The file 1 contains: '</span> + text.length + <span class="string">' bytes'</span>);</span><br><span class="line">      resolve();</span><br><span class="line">    &#125; );</span><br><span class="line">  &#125; );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asyncReadfile2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"The await async function to read file 2 is called"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123; </span><br><span class="line">    readFile(<span class="string">"C:/Download/141.xps"</span>).then( <span class="function">(<span class="params">text</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'The file 2 contains: '</span> + text.length + <span class="string">' bytes'</span>);</span><br><span class="line">      resolve();</span><br><span class="line">    &#125; );</span><br><span class="line">  &#125; );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asyncMain</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123; </span><br><span class="line">     asyncReadfile1().then( <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"Processing between reading 2 files"</span>);</span><br><span class="line">      asyncReadfile2().then( <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        resolve(<span class="string">"successful"</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Start processing..."</span>);</span><br><span class="line">asyncMain().then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"The async main function is called "</span> + result); </span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Go to the next statement after the async main function"</span>);</span><br></pre></td></tr></table></figure><h3 id="Understanding-for-Promise"><a href="#Understanding-for-Promise" class="headerlink" title="Understanding for Promise"></a>Understanding for Promise</h3><ol><li><p>The resolved immediately Promise object will be effective in next <em>Event loop</em>, instead of current <em>Event loop</em>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'three'</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.resolve().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'two'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'one'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// one</span></span><br><span class="line"><span class="comment">// two</span></span><br><span class="line"><span class="comment">// three</span></span><br></pre></td></tr></table></figure></li><li><p>The <code>Promise.prototype.then</code> method will return another Promise object, which is not the original Promise object.</p></li><li>The new Promise object will be executed immediately after creation.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"New Promise object"</span>);</span><br><span class="line">    resolve();</span><br><span class="line">  &#125;).then( <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Callback method"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"After creating new Promise object"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// New Promise object</span></span><br><span class="line"><span class="comment">// After creating new Promise object</span></span><br><span class="line"><span class="comment">// Callback method</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="http://es6.ruanyifeng.com/#docs/promise#%E5%BA%94%E7%94%A8" target="_blank" rel="noopener">Promise object</a><br><a href="http://es6.ruanyifeng.com/?search=await&amp;x=0&amp;y=0#docs/async" target="_blank" rel="noopener">async function</a></p>]]></content>
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Enhance ABAP Code provided by Vendor in SAP</title>
      <link href="/2018/03/sap-enhance-vendor-code/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>In SAP, sometimes we may need to add an enhancement implementation for an implicit enhancement spot of Vendor provided ABAP code. In that case, when you are trying to enhance the vendor code, you may receive an error message <code>Object &lt;object_type&gt; &lt;object_name&gt; cannot be enhanced; software component Unknown cannot be enhanced</code>.</p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>After the analysis, we find that in the function <code>TR_GET_DLVUNIT_CHANGEABILITY</code>, it will check table <code>CVERS</code> and <code>DLV_SYSTC</code> to see if the software component is changeable or not. If not, the error message will display. The software component is assigned to the package (development class) of the ABAP code.</p><p>To fix the issue, we tried to find a t-code or program to update table entries in <code>CVERS</code> and <code>DLV_SYSTC</code> to set the changeable flag to <em>Yes</em> for the software component, but with no luck.</p><p>Later, we tried to update the software component for the package, and below is the solution.</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>Run t-code <code>SE03</code>, and choose <code>Administration</code> -&gt; <code>Display/Change Namespaces</code>. Switch to change mode, double click on the namespace <code>/&lt;vendor_ns&gt;/</code> of the vendor package, change <code>Namespace role</code> to <code>C: Recipient</code> and save the entry.</p><p>Run t-code <code>SE80</code>, choose <code>Package</code>, input the package name, double click on the package, switch to change mode, change <code>Software Component</code> to <code>HOME</code>, and save the package.</p>]]></content>
      
      <categories>
          
          <category> ABAP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAP </tag>
            
            <tag> ABAP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSL Client Authentication and SSL Server Authentication</title>
      <link href="/2018/03/client-auth-and-server-auth/"/>
      <content type="html"><![CDATA[<h3 id="Messages-Exchanged-During-SSL-Handshake"><a href="#Messages-Exchanged-During-SSL-Handshake" class="headerlink" title="Messages Exchanged During SSL Handshake"></a>Messages Exchanged During SSL Handshake</h3><p>The following steps describes the sequence of messages exchanged during an SSL handshake. These step describe the programmatic details of the messages exchanged during the SSL handshake.</p><ol><li><p>The client sends the server the client’s SSL version number, cipher settings, randomly generated data, and other information the server needs to communicate with the client using SSL. <code>Client hello</code></p></li><li><p>The server sends the client the server’s SSL version number, cipher settings, randomly generated data, and other information the client needs to communicate with the server over SSL. The server also sends its own certificate and, if the client is requesting a server resource that requires client authentication, requests the client’s certificate. <code>Server hello</code> <code>Certificate</code> <code>Certificate request</code></p></li><li><p>The client can use some of the information sent by the server to authenticate the server. For details, see <code>Server Authentication During SSL Handshake</code>. If the server cannot be authenticated, the user is warned of the problem and informed that an encrypted and authenticated connection cannot be established. If the server can be successfully authenticated, the client goes on to Step 4.</p></li><li><p>Using all data generated in the handshake so far, the client, with the cooperation of the server, depending on the cipher being used, creates the pre-master secret for the session, encrypts it with the server’s public key, obtained from the server’s certificate, sent in Step 2, and sends the encrypted pre-master secret to the server. <code>Client key exchange</code></p></li><li><p>If the server has requested client authentication (an optional step in the handshake), the client also signs another piece of data that is unique to this handshake and known by both the client and server. In this case the client sends both the signed data and the client’s own certificate to the server along with the encrypted pre-master secret. <code>Certificate</code> <code>Client key exchange</code></p></li><li><p>If the server has requested client authentication, the server attempts to authenticate the client. For details, see <code>Client Authentication During SSL Handshake</code>. If the client cannot be authenticated, the session is terminated. If the client can be successfully authenticated, the server uses its private key to decrypt the pre-master secret, then performs a series of steps (which the client also performs, starting from the same pre-master secret) to generate the master secret.</p></li><li><p>Both the client and the server use the master secret to generate the session keys, which are symmetric keys used to encrypt and decrypt information exchanged during the SSL session and to verify its integrity—that is, to detect changes in the data between the time it was sent and the time it is received over the SSL connection.</p></li><li><p>The client sends a message to the server informing it that future messages from the client are encrypted with the session key. It then sends a separate (encrypted) message indicating that the client portion of the handshake is finished. <code>Change cipher spec</code> <code>Client finished</code></p></li><li><p>The server sends a message to the client informing it that future messages from the server are encrypted with the session key. It then sends a separate (encrypted) message indicating that the server portion of the handshake is finished. <code>Change cipher spec</code> <code>Server finished</code></p></li><li><p>The SSL handshake is now complete, and the SSL session has begun. The client and the server use the session keys to encrypt and decrypt the data they send to each other and to validate its integrity.</p></li></ol><p>Before continuing with a session, directory servers can be configured to check that the client’s certificate is present in the user’s entry in an LDAP directory. This configuration option provides one way of ensuring that the client’s certificate has not been revoked.</p><p>Both client and server authentication involve encrypting some piece of data with one key of a public-private key pair and decrypting it with the other key:</p><ul><li><p>In the case of server authentication, the client encrypts the pre-master secret with the server’s public key. Only the corresponding private key can correctly decrypt the secret, so the client has some assurance that the identity associated with the public key is in fact the server with which the client is connected. Otherwise, the server cannot decrypt the pre-master secret and cannot generate the symmetric keys required for the session, and the session is terminated.</p></li><li><p>In the case of client authentication, the client encrypts some random data with the client’s private key—that is, it creates a digital signature. The public key in the client’s certificate can correctly validate the digital signature only if the corresponding private key was used. Otherwise, the server cannot validate the digital signature and the session is terminated.</p></li></ul><h3 id="Server-Authentication-During-SSL-Handshake"><a href="#Server-Authentication-During-SSL-Handshake" class="headerlink" title="Server Authentication During SSL Handshake"></a>Server Authentication During SSL Handshake</h3><p>SSL-enabled client software always requires server authentication, or cryptographic validation by a client of the server’s identity. The server sends the client a certificate to authenticate itself. The client uses the certificate to authenticate the identity the certificate claims to represent.</p><p>To authenticate the binding between a public key and the server identified by the certificate that contains the public key, an SSL-enabled client must receive a yes answer to the four questions shown in the following figure.</p><p><em>Figure 5–9 Authenticating a Server Certificate During SSL Handshake</em><br><img src="https://docs.oracle.com/cd/E19424-01/820-4811/images/svrauth.gif" alt="Server authentication"></p><p>An SSL-enabled client goes through the following steps to authenticate a server’s identity:</p><ol><li><p>Is today’s date within the validity period?</p><p>The client checks the server certificate’s validity period. If the current date and time are outside of that range, the authentication process won’t go any further. If the current date and time are within the certificate’s validity period, the client goes on to the next step.</p></li><li><p>Is the issuing CA a trusted CA?</p><p>Each SSL-enabled client maintains a list of trusted CA certificates, represented by the shaded area on the right—hand side of Figure 5–9. This list determines which server certificates the client accepts. If the distinguished name (DN) of the issuing CA matches the DN of a CA on the client’s list of trusted CAs, the answer to this question is yes, and the client goes on to the next step. If the issuing CA is not on the list, the server is not authenticated unless the client can verify a certificate chain ending in a CA that is on the list.</p></li><li><p>Does the issuing CA’s public key validate the issuer’s digital signature?</p><p>The client uses the public key from the CA’s certificate (which it found in its list of trusted CAs in step 2) to validate the CA’s digital signature on the server certificate being presented. If the information in the server certificate has changed since it was signed by the CA or if the CA certificate’s public key doesn’t correspond to the private key used by the CA to sign the server certificate, the client won’t authenticate the server’s identity. If the CA’s digital signature can be validated, the server treats the user’s certificate as a valid “letter of introduction” from that CA and proceeds. At this point, the client has determined that the server certificate is valid.</p></li><li><p>Does the domain name in the server’s certificate match the domain name of the server itself?</p><p>This step confirms that the server is actually located at the same network address specified by the domain name in the server certificate. Although step 4 is not technically part of the SSL protocol, it provides the only protection against a form of security attack known as man-in-the-middle. Clients must perform this step and must refuse to authenticate the server or establish a connection if the domain names don’t match. If the server’s actual domain name matches the domain name in the server certificate, the client goes on to the next step.</p></li><li><p>The server is authenticated.</p><p>The client proceeds with the SSL handshake. If the client doesn’t get to step 5 for any reason, the server identified by the certificate cannot be authenticated, and the user is warned of the problem and informed that an encrypted and authenticated connection cannot be established. If the server requires client authentication, the server performs the steps described in <code>Client Authentication During SSL Handshake</code>.</p></li></ol><p>After the steps described here, the server must successfully use its private key to decrypt the pre-master secret sent by the client.</p><h3 id="Client-Authentication-During-SSL-Handshake"><a href="#Client-Authentication-During-SSL-Handshake" class="headerlink" title="Client Authentication During SSL Handshake"></a>Client Authentication During SSL Handshake</h3><p>SSL-enabled servers can be configured to require client authentication, or cryptographic validation by the server of the client’s identity. When a server configured this way requests client authentication separate piece of digitally signed data to authenticate itself. The server uses the digitally signed data to validate the public key in the certificate and to authenticate the identity the certificate claims to represent.</p><p>The SSL protocol requires the client to create a digital signature by creating a one-way hash from data generated randomly during the handshake and known only to the client and server. The hash of the data is then encrypted with the private key that corresponds to the public key in the certificate being presented to the server.</p><p>To authenticate the binding between the public key and the person or other entity identified by the certificate that contains the public key, an SSL-enabled server must receive a yes answer to the first four questions shown in Figure 5–10. Although the fifth question is not part of the SSL protocol, directory servers can be configured to support this requirement to take advantage of the user entry in an LDAP directory as part of the authentication process.</p><p><em>Figure 5–10 Authentication and Verification During SSL Handshake</em><br><img src="https://docs.oracle.com/cd/E19424-01/820-4811/images/cert.gif" alt="Client authentication"></p><p>An SSL-enabled server goes through the following steps to authenticate a user’s identity:</p><ol><li><p>Does the user’s public key validate the user’s digital signature?</p><p>The server checks that the user’s digital signature can be validated with the public key in the certificate. If so, the server has established that the public key asserted to belong to John Doe matches the private key used to create the signature and that the data has not been tampered with since it was signed.</p><p>At this point, however, the binding between the public key and the DN specified in the certificate has not yet been established. The certificate might have been created by someone attempting to impersonate the user. To validate the binding between the public key and the DN, the server must also complete steps 3 and 4 in this list.</p></li><li><p>Is today’s date within the validity period?</p><p>The server checks the certificate’s validity period. If the current date and time are outside of that range, the authentication process won’t go any further. If the current date and time are within the certificate’s validity period, the server goes onto the next step.</p></li><li><p>Is the issuing CA a trusted CA?</p><p>Each SSL-enabled server maintains a list of trusted CA certificates, represented by the shaded area on the right—hand side of Figure 5–10. This list determines which certificates the server accepts. If the DN of the issuing CA matches the DN of a CA on the server’s list of trusted CAs, the answer to this question is yes, and the server goes on to the next step. If the issuing CA is not on the list, the client is not authenticated unless the server can verify a certificate chain ending in a CA that is trusted or not trusted within their organizations by controlling the lists of CA certificates maintained by clients and servers.</p></li><li><p>Does the issuing CA’s public key validate the issuer’s digital signature?</p><p>The server uses the public key from the CA’s certificate (which it found in its list of trusted CAs in the previous step) to validate the CA’s digital signature on the certificate being presented. If the information in the certificate has changed since it was signed by the CA or if the public key in the CA certificate doesn’t correspond to the private key used by the CA to sign the certificate, the server won’t authenticate the user’s identity. If the CA’s digital signature can be validated, the server treats the user’s certificate as a valid “letter of introduction” from that CA and proceeds. At this point, the SSL protocol allows the server to consider the client authenticated and proceed with the connection as described in step 6. The directory servers may optionally be configured to perform step 5 before step 6.</p></li><li><p>Is the user’s certificate listed in the LDAP entry for the user?</p><p>This optional step provides one way for a system administrator to revoke a user’s certificate even if it passes the tests in all the other steps. The Certificate Management System can automatically remove a revoked certificate from the user’s entry in the LDAP directory. All servers that are set up to perform this step then refuses to authenticate that certificate or establish a connection. If the user’s certificate in the directory is identical to the user’s certificate presented in the SSL handshake, the server goes on to the next step.</p></li><li><p>Is the authenticated client authorized to access the requested resources?</p><p>The server checks what resources the client is permitted to access according to the server’s access control lists (ACLs) and establishes a connection with appropriate access. If the server doesn’t get to step 6 for any reason, the user identified by the certificate cannot be authenticated, and the user is not allowed to access any server resources that require authentication.</p></li></ol><h3 id="Digital-Signatures"><a href="#Digital-Signatures" class="headerlink" title="Digital Signatures"></a>Digital Signatures</h3><p>Digital signatures can be used by Directory Server to maintain integrity of information. If encryption and message digests are applied to the information being sent, the recipient can determine that the information was not tampered with during transit.</p><p>Tamper detection and related authentication techniques rely on a mathematical function called a one-way hash. This function is also called a message digest. A one-way hash is a number of fixed length with the following characteristics:</p><ul><li><p>The value of the hash is unique for the hashed data. Any change in the data, even deleting or altering a single character, results in a different value.</p></li><li><p>The content of the hashed data cannot, for all practical purposes, be deduced from the hash — which is why it is called <em>one-way</em>.</p></li></ul><p>It is possible to use a private key for encryption and a public key for decryption. Although this is not desirable when you are encrypting sensitive information, it is a crucial part of digitally signing any data. Instead of encrypting the data itself, the signing software creates a one-way hash of the data, then uses your private key to encrypt the hash. The encrypted hash, along with other information, such as the hashing algorithm, is known as a digital signature. Figure 5–11 shows two items transferred to the recipient of some signed data.</p><p><em>Figure 5–11 Digital Signatures</em><br><img src="https://docs.oracle.com/cd/E19424-01/820-4811/images/digsgn.gif" alt="Digital Signature"></p><p>In Figure 5–11, the original data and the digital signature, which is basically a one-way hash (of the original data) that has been encrypted with the signer’s private key. To validate the integrity of the data, the receiving software first uses the signer’s public key to decrypt the hash. It then uses the same hashing algorithm that generated the original hash to generate a new one-way hash of the same data. (Information about the hashing algorithm used is sent with the digital signature, although this isn’t shown in the figure.) Finally, the receiving software compares the new hash against the original hash. If the two hashes match, the data has not changed since it was signed. If they don’t match, the data may have been tampered with since it was signed, or the signature may have been created with a private key that doesn’t correspond to the public key presented by the signer.</p><p>If the two hashes match, the recipient can be certain that the public key used to decrypt the digital signature corresponds to the private key used to create the digital signature. Confirming the identity of the signer, however, also requires some way of confirming that the public key really belongs to a particular person or other entity.</p><p>The significance of a digital signature is comparable to the significance of a handwritten signature. Once you have signed some data, it is difficult to deny doing so later — assuming that the private key has not been compromised or out of the owner’s control. This quality of digital signatures provides a high degree of non-repudiation — that is, digital signatures make it difficult for the signer to deny having signed the data. In some situations, a digital signature may be as legally binding as a handwritten signature.</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://docs.oracle.com/cd/E19424-01/820-4811/gbfqu/index.html" target="_blank" rel="noopener">Messages Exchanged During SSL Handshake</a><br><a href="https://docs.oracle.com/cd/E19424-01/820-4811/aakhc/index.html" target="_blank" rel="noopener">Server Authentication During SSL Handshake</a><br><a href="https://docs.oracle.com/cd/E19424-01/820-4811/aakhe/index.html" target="_blank" rel="noopener">Client Authentication During SSL Handshake</a><br><a href="https://docs.oracle.com/cd/E19424-01/820-4811/aakfx/index.html" target="_blank" rel="noopener">Digital Signatures</a></p>]]></content>
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Network </tag>
            
            <tag> Security </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SOAP technical setup in SAP for Webservice</title>
      <link href="/2018/03/sap-webservice-setup/"/>
      <content type="html"><![CDATA[<p>To enable a webservice in SAP system, we have to perform SOAP technical setup if it was not completed before.</p><h3 id="SOAP-technical-setup-in-SAP"><a href="#SOAP-technical-setup-in-SAP" class="headerlink" title="SOAP technical setup in SAP"></a>SOAP technical setup in SAP</h3><ol><li>Run t-code <code>SRT_ADMIN</code> to perform automatic setup for the below technical settings<ul><li>bgRFC inbound destination</li><li>bgRFC supervisor destination</li><li>Service RFC destination and user</li><li>ICF nodes</li></ul></li><li>Run t-code <code>SRM_ADMIN</code> to check the technical settings</li><li>Make sure the Webservice SICF service <code>/sap/bc/srt/xip/sap/&lt;webservice_name&gt;</code> is activated in t-code <code>SICF</code></li></ol><h3 id="Errors-and-Resolutions"><a href="#Errors-and-Resolutions" class="headerlink" title="Errors and Resolutions"></a>Errors and Resolutions</h3><ul><li><p>Error:</p><blockquote><p>The webservice message is hanging in webservice monitor <code>SRT_MONI</code> with status <em>wait for scheduler</em>.</p></blockquote></li><li><p>Resolution:</p><blockquote><p>Based on SAP note <code>2278161</code>, the probable reason is the incomplete setup of bgRFC supervisor destination. Complete the technical settings setup in <code>SRT_ADMIN</code> to fix the issue.</p></blockquote></li></ul>]]></content>
      
      <categories>
          
          <category> SAP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAP </tag>
            
            <tag> Webservice </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>TLS Handshake</title>
      <link href="/2018/03/tls-ssl/"/>
      <content type="html"><![CDATA[<p>TLS/SSL is used to establish connection in HTTPS. Here I will note down my understanding for the TLS handshake process.</p><p>The Transport Layer Security (TLS) Handshake Protocol is responsible for the authentication and key exchange necessary to establish or resume secure sessions. When establishing a secure session, the Handshake Protocol manages the following:</p><ul><li>Cipher suite negotiation</li><li>Authentication of the server and optionally, the client</li><li>Session key information exchange.</li></ul><h3 id="Cipher-Suite-Negotiation"><a href="#Cipher-Suite-Negotiation" class="headerlink" title="Cipher Suite Negotiation"></a>Cipher Suite Negotiation</h3><p>The client and server make contact and choose the <em>cipher suite</em> that will be used throughout their message exchange.</p><h3 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h3><p>In TLS, a server proves its identity to the client. The client might also need to prove its identity to the server. PKI, the use of public/private key pairs, is the basis of this authentication. The exact method used for authentication is determined by the cipher suite negotiated.</p><h3 id="Key-Exchange"><a href="#Key-Exchange" class="headerlink" title="Key Exchange"></a>Key Exchange</h3><p>The client and server exchange <em>random numbers</em> and a special number called the <em>premaster secret</em>. These numbers are combined with additional data permitting client and server to create their shared secret, called the <em>master secret</em>. The <em>master secret</em> is used by client and server to generate the <em>write MAC secret</em>, which is the session key used for hashing, and the <em>write key</em>, which is the session key used for encryption.</p><h3 id="Establishing-a-Secure-Session-by-Using-TLS"><a href="#Establishing-a-Secure-Session-by-Using-TLS" class="headerlink" title="Establishing a Secure Session by Using TLS"></a>Establishing a Secure Session by Using TLS</h3><ol><li>The client sends a <code>Client hello</code> message to the server, along with the <em>client’s random value</em> and <em>supported cipher suites</em>.</li><li>The server responds by sending a <code>Server hello</code> message to the client, along with the <em>server’s random value</em>, the <em>selected cipher suite</em> and <em>session id</em>.</li><li>The server sends its <em>certificate</em> to the client with a <code>Certificate</code> message for authentication.</li><li><em>Optional.</em> This step is required when the client requires additional data to generate a <em>premaster secret</em> based on the <em>key exchange algorithm</em> such as <em>DHE_RSA</em> in the <em>selected cipher suite</em>. The server sends a <code>Server key exchange</code> message to the client, along with <em>Diffie-Hellman parameters</em>.</li><li><em>Optional.</em> This step is required for client authentication. The server requests a certificate from the client with a <code>Certificate request</code> message.</li><li>The server sends the <code>Server hello done</code> message.</li><li>The client verifies the sever’s certificate.</li><li><em>Optional.</em> This step is required for client authentication. The client sends its <em>certificate</em> with a <code>Certificate</code> message.</li><li>The client sends a <code>Client key exchange</code> message to the server.<ul><li>It may contain the RSA-encrypted random <em>premaster secret</em> based on the <em>key exchange algorithm</em> such as <em>RSA</em> in the <em>selected cipher suite</em>. In this case, <em>premaster secret</em> is encrypted with the public key from the server’s certificate.</li><li>It may contain <em>Diffie-Hellman parameters</em> that will allow each side to agree upon the same <em>premaster secret</em> based on the <em>key exchange algorithm</em> such as <em>DHE_RSA</em> in the <em>selected cipher suite</em>.</li></ul></li><li><em>Optional.</em> The client sends a <code>Certificate verify</code> message to server.</li><li><em>Optional.</em> This step is required for client authentication. The server verifies the client’s certificate.</li><li>The server receives the <em>premaster secret</em> by decryption or calculation. The server and client each generate the <em>master secret</em> and <em>session keys</em> based on the <em>premaster secret</em>, <em>client’s random value</em> and <em>server’s random value</em>.<ul><li>In case of <em>key exchange algorithm</em> such as <em>RSA</em> in the <em>selected cipher suite</em>, the server will decrypt the encrypted <em>premaster secret</em> with its private key based on RSA asymmetric encryption algorithm.</li><li>In case of <em>key exchange algorithm</em> such as <em>DHE_RSA</em> in the <em>selected cipher suite</em>, the server will calculate the <em>premaster secret</em> with the <em>Diffie-Hellman parameters</em> based on Diffie–Hellman key exchange algorithm.</li></ul></li><li>The client sends <code>Change cipher spec</code> message to server to indicate that the client will start using the <em>session key</em> for hashing and encrypting messages. </li><li>Client also sends <code>Client finished</code> message which is encrypted with <em>session key</em> based on the symmetric encryption algorithm of the <em>selected cipher suite</em>.</li><li>Server sends <code>Change cipher spec</code> and switches its record layer security state to symmetric encryption using the <em>session key</em>. </li><li>Server sends <code>Server finished</code> message to the client which is encrypted with <em>session key</em> based on the symmetric encryption algorithm of the <em>selected cipher suite</em>.</li><li>Client and server can now exchange application data over the secured channel they have established. All messages sent from client to server and from server to client are encrypted using <em>session key</em>.</li></ol><h3 id="Resuming-a-Secure-Session-by-Using-TLS"><a href="#Resuming-a-Secure-Session-by-Using-TLS" class="headerlink" title="Resuming a Secure Session by Using TLS"></a>Resuming a Secure Session by Using TLS</h3><ol><li>The client sends a <code>Client hello</code> message using the <em>Session ID</em> of the session to be resumed.</li><li>The server checks its session cache for a matching Session ID. If a match is found, and the server is able to resume the session, it sends a <code>Server hello</code> message with the <em>Session ID</em>.<blockquote><p>Note  If a session ID match is not found, the server generates a new session ID and the TLS client and server perform a full handshake.</p></blockquote></li><li>Client and server must exchange <code>Change cipher spec</code> messages and send <code>Client finished</code> and <code>Server finished</code> messages.</li><li>Client and server can now resume application data exchange over the secure channel.</li></ol><h3 id="Encryption-techniques-in-TLS"><a href="#Encryption-techniques-in-TLS" class="headerlink" title="Encryption techniques in TLS"></a>Encryption techniques in TLS</h3><p>TLS uses asymmetric encryption techniques to generate a shared secret key <em>premaster secret</em>, which avoids the key distribution problem. It uses the shared key for the symmetric encryption of application data, which is faster than asymmetric encryption.</p><ul><li>Asymmetric encryption: There is a public-private key pair. The data can be encypted with one key, and decrypted with another key.</li><li>Symmetric encryption: There is one shared key. The data can be encypted and decrypted with the same key. It is faster than asymmetric encryption.</li></ul><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><p><a href="https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29" target="_blank" rel="noopener">RSA</a> is an asymmetric public-private key encyption algorithm. In TLS, it is used by client to transfer the <em>premaster secret</em> and server to decrypt it to get it.</p><h3 id="AES-3DES"><a href="#AES-3DES" class="headerlink" title="AES/3DES"></a>AES/3DES</h3><p><a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard" target="_blank" rel="noopener">AES</a> and <a href="https://en.wikipedia.org/wiki/Triple_DES" target="_blank" rel="noopener">3DES</a> are symmetric key encyption algorithms. In TLS, it is used by client and server to encypt and decrypt application data.</p><h3 id="Diffie–Hellman-key-exchange"><a href="#Diffie–Hellman-key-exchange" class="headerlink" title="Diffie–Hellman key exchange"></a>Diffie–Hellman key exchange</h3><p><a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange" target="_blank" rel="noopener">Diffie–Hellman</a> is a key exchange algorithm to establish a shared secret between two parties. In TLS, it can be used together than <em>RSA</em> to establish a shared secret <em>premaster secret</em> between server and client. </p><h3 id="Cipher-Suite"><a href="#Cipher-Suite" class="headerlink" title="Cipher Suite"></a>Cipher Suite</h3><p>It contains the key exchange algorithm such as RSA/DHE_RSA, and cipher which defines the symmetric encyption algorithm such as AES.</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa380513%28v=vs.85%29.aspx" target="_blank" rel="noopener">TLS Handshake Protocol (Windows) - MSDN - Microsoft</a><br><a href="https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.1.0/com.ibm.mq.doc/sy10660_.htm" target="_blank" rel="noopener">An overview of the SSL or TLS handshake - IBM</a><br><a href="https://en.wikipedia.org/wiki/Transport_Layer_Security" target="_blank" rel="noopener">Transport Layer Security - Wikipedia</a><br><a href="https://www.cisco.com/c/en/us/about/press/internet-protocol-journal/back-issues/table-contents-18/ssl.html" target="_blank" rel="noopener">SSL: Foundation for Web Security - The Internet Protocol</a><br><a href="https://tools.ietf.org/html/rfc5246" target="_blank" rel="noopener">RFC 5246 - The Transport Layer Security (TLS) Protocol Version 1.2</a></p>]]></content>
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Network </tag>
            
            <tag> Security </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Debug Hexo with VS Code</title>
      <link href="/2018/03/nodejs-debugging/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>I need to add the code highlighting feature for ABAP language in Hexo, so I would need to debug the Hexo Node.js application. The tool I am using is Visual Studio Code.</p><p>The code for programing language is highlighted when the website files are generated from markdown files using Hexo command <code>hexo generate</code>. Actually, the hexo command <code>hexo generate</code> is the abbreviation for <code>node &lt;hexo_base_folder&gt;/node_modules/hexo/node_modules/hexo-cli/bin/hexo generate</code>. So, I will use the configuration <code>Node.js: Launch Program</code> in VS code to debug the Hexo application.</p><h3 id="Steps-to-debug-Hexo-application"><a href="#Steps-to-debug-Hexo-application" class="headerlink" title="Steps to debug Hexo application"></a>Steps to debug Hexo application</h3><ol><li><p>Open the Hexo base folder in Visual Studio Code.</p></li><li><p>Switch to <code>Debug</code> view, and choose <code>Add Configuration...</code> in the <code>No Configuration</code> dropdown box</p></li><li><p>In the configuration file <code>launch.json</code>, choose <code>{} Node.js: Launch Program</code>, change the program parameter for the Hexo bin file location, and add a parameter <code>args</code> with value <code>generate</code> manually or by pressing <code>Ctrl + Space</code>. Save the configuration file.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // Use IntelliSense to learn about possible attributes.</span><br><span class="line">    // Hover to view descriptions of existing attributes.</span><br><span class="line">    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    "version": "0.2.0",</span><br><span class="line">    "configurations": [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"node"</span>,</span><br><span class="line">        <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"node"</span>,</span><br><span class="line">        <span class="attr">"program"</span>: <span class="string">"$&#123;workspaceFolder&#125;/node_modules/hexo/node_modules/hexo-cli/bin/hexo"</span>,</span><br><span class="line">        <span class="attr">"args"</span>: [</span><br><span class="line">            <span class="string">"generate"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Open a JavaScript file in VS code, like <code>&lt;hexo base folder&gt;\node_modules\hexo\node_modules\hexo-cli\lib\hexo.js</code>, and add a breakpoint in it</p></li><li><p>Press the <code>Start debugging</code> button to start debugging, and the VS Code debugger will stop at the breakpoint.</p><p>You will find the below information in <code>DEBUG CONSOLE</code>.</p><blockquote><p>node –inspect-brk=25386 node_modules\hexo\node_modules\hexo-cli\bin\hexo generate<br>Debugger listening on ws://127.0.0.1:25386/f253557e-17e7-4480-aa80-88b839ed4fe2</p></blockquote></li></ol>]]></content>
      
      <categories>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Website </tag>
            
            <tag> Hexo </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Testing in JavaScript</title>
      <link href="/2018/03/javascript-testing/"/>
      <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>There are many ways to test and debug JavaScript code. Here I will note down some methods that I am using.</p><h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><h4 id="1-Create-a-HTML-file-with-JavaScript-code"><a href="#1-Create-a-HTML-file-with-JavaScript-code" class="headerlink" title="1. Create a HTML file with JavaScript code"></a>1. Create a HTML file with JavaScript code</h4><p>Create a HTML file such as <code>test.html</code> with JavaScript code in local directory. Open the file directly<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"ISO-8859-1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> test = <span class="string">'Test string'</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(test);</span></span><br><span class="line"><span class="actionscript">    alert(<span class="string">"Hello, World!"</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">This is a test page.</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="2-Test-with-jsfiddle"><a href="#2-Test-with-jsfiddle" class="headerlink" title="2. Test with jsfiddle"></a>2. Test with jsfiddle</h4><ul><li><p>Open site <a href="https://jsfiddle.net" target="_blank" rel="noopener">jsfiddle</a></p></li><li><p>Add the below code to HTML section</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"console-log"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Add the below code to CSS section</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.console-line</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: monospace;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Add the below code to JavaScript section and choose a <code>jQuery</code> library as the <code>FRAMEWORK &amp; EXTENSIONS</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> consoleLine = <span class="string">"&lt;p class=\"console-line\"&gt;&lt;/p&gt;"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">console</span> = &#123;</span><br><span class="line">    log: <span class="function"><span class="keyword">function</span> (<span class="params">text</span>) </span>&#123;</span><br><span class="line">        $(<span class="string">"#console-log"</span>).append($(consoleLine).html(text));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>Choose <code>Save</code> button to save new fiddle, and bookmark the new URL</p></li><li><p>Now, you can add your code for testing. </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> test = <span class="string">"Test String"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(test);</span><br><span class="line">alert(<span class="string">"Hello, World!"</span>);</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-Test-with-Visual-Studio-Code-and-local-web-server"><a href="#3-Test-with-Visual-Studio-Code-and-local-web-server" class="headerlink" title="3. Test with Visual Studio Code and local web server"></a>3. Test with Visual Studio Code and local web server</h4><ul><li>Install Node.js</li><li>Create a new folder for your project</li><li><p>Add a package.json file to the project folder</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">   <span class="attr">"name"</span>: <span class="string">"Demo"</span>, </span><br><span class="line">   <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>, </span><br><span class="line">   <span class="attr">"description"</span>: <span class="string">"demo project."</span>, </span><br><span class="line">   <span class="attr">"scripts"</span>: &#123; </span><br><span class="line">     <span class="attr">"lite"</span>: <span class="string">"lite-server --port 10001"</span>, </span><br><span class="line">     <span class="attr">"start"</span>: <span class="string">"npm run lite"</span> </span><br><span class="line">   &#125;, </span><br><span class="line">   <span class="attr">"author"</span>: <span class="string">""</span>, </span><br><span class="line">   <span class="attr">"license"</span>: <span class="string">"ISC"</span>, </span><br><span class="line">   <span class="attr">"devDependencies"</span>: &#123; </span><br><span class="line">     <span class="attr">"lite-server"</span>: <span class="string">"^1.3.1"</span> </span><br><span class="line">   &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Install the web server</p><p>In a terminal window (command prompt in Windows) opened on your project folder, run this command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>This will install lite-server (defined in package.json), a static server that loads index.html in your default browser and auto refreshes it when application files change.</p></li><li><p>Start the local web server</p><p>Assuming you have an index.html file in your project folder. In the same terminal window (command prompt in Windows) run this command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><p>Wait a second and index.html is loaded and displayed in your default browser served by your local web server!<br>lite-server is watching your files and refreshes the page as soon as you make changes to any html, js or css files.<br>And if you have VS Code configured to auto save (menu File / Auto Save), you see changes in the browser as you type!</p><p>Notes:</p><blockquote><p>Do not close the command line prompt until you’re done coding in your app for the day<br>It opens on <a href="http://localhost:10001" target="_blank" rel="noopener">http://localhost:10001</a> but you can change the port by editing the package.json file.</p></blockquote><p>That’s it. Now before any coding session just type npm start and you are good to go!</p></li></ul><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://blogs.msdn.microsoft.com/cdndevs/2016/01/24/visual-studio-code-and-local-web-server/" target="_blank" rel="noopener">Visual Studio Code and local web server</a></p>]]></content>
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Testing </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Highlight ABAP Language in Hexo</title>
      <link href="/2018/03/hexo-abap-highlight/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>The code highlighting functionality <code>highlight.js</code> is not enabled for ABAP language for Hexo by default. You can follow the below guide to enable it.</p><h3 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h3><h4 id="1-Update-the-file-node-modules-highlight-js-lib-index-js-under-Hexo-base-folder-and-add-the-below-code"><a href="#1-Update-the-file-node-modules-highlight-js-lib-index-js-under-Hexo-base-folder-and-add-the-below-code" class="headerlink" title="1. Update the file .\node_modules\highlight.js\lib\index.js under Hexo base folder, and add the below code"></a>1. Update the file <code>.\node_modules\highlight.js\lib\index.js</code> under Hexo base folder, and add the below code</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hljs.registerLanguage(<span class="string">'abap'</span>, <span class="built_in">require</span>(<span class="string">'./languages/abap'</span>));</span><br></pre></td></tr></table></figure><h4 id="2-Create-a-file-node-modules-highlight-js-lib-languages-abap-js-under-Hexo-base-folder-and-add-the-below-code"><a href="#2-Create-a-file-node-modules-highlight-js-lib-languages-abap-js-under-Hexo-base-folder-and-add-the-below-code" class="headerlink" title="2. Create a file .\node_modules\highlight.js\lib\languages\abap.js under Hexo base folder, and add the below code"></a>2. Create a file <code>.\node_modules\highlight.js\lib\languages\abap.js</code> under Hexo base folder, and add the below code</h4><p>The ABAP language syntax file is downloaded from <a href="https://raw.githubusercontent.com/cassioiks/highlight.js/2db174f25da1153f0ca2da12e742526909ad6b3a/src/languages/abap.js" target="_blank" rel="noopener">GitHub</a>, adjusted as below.</p><ul><li>Add <code>module.exports =</code> at the beginning</li><li>Adjust the comment end tag from <code>&#39;\n&#39;</code> to <code>&#39;$&#39;</code></li><li>Correct some typos in the keywords</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">hljs</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    case_insensitive: <span class="literal">true</span>,</span><br><span class="line">    keywords: &#123;</span><br><span class="line">    keyword: <span class="string">'ABBREVIATED ABS ABSTRACT FINAL ACCEPT ACCEPTING ACCORDING ACOS ACTUAL ADD ADD-CORRESPONDING ADDITIONS ADJACENT AFTER '</span>  </span><br><span class="line">        +<span class="string">'ALIASES ALL ALLOCATE ANALYZER AND APPEND APPENDING AS ASCENDING DESCENDING ASIN ASSIGN ASSIGNING ATAN ATTRIBUTE AUTHORITY-CHECK '</span></span><br><span class="line">        +<span class="string">'AVG BACK BACKGOUND BEFORE BETWEEN BIG LITTLE BINARY BIT BLANK BLOCK BREAK-POINT BUFFER BY BYPASSING BYTE BYTECHARACTER CALL CASE RESPECTING '</span></span><br><span class="line">        +<span class="string">'CASTING CEIL CENTERED CHANGE CHANGING CHARACTER CHECK CHECKBOX SYMBOL ICONLINE CLASS-DATA CLASS-EVENTS CLASS-METHODS CLEANUP CLEAR '</span></span><br><span class="line">        +<span class="string">'CLIENT CLOCK CLOSE CODE COL_BACKGROUND COL_HEADING COL_NORMAL COL_TOTAL COLLECT COLOR COLUMN COMMENT COMMIT COMMON COMMUNICATION COMPARING '</span></span><br><span class="line">        +<span class="string">'COMPONENT COMPONENTS COMPUTE CONCATENATE CONDENSE CONSTANTS CONTEXT CONTEXTS CONTINUE CONTROL CONTROLS CONVERSION CONVERT COS COSH COUNT COUNTRY '</span></span><br><span class="line">        +<span class="string">'COUNTY CREATE CURRENCY CURRENT CURSOR CUSTOMER-FUNCTION DATA DATABASE DATASET DATE DEALLOCATE DECIMALS DEFAULT UTF-8 NON-UNICODE DEFERRED '</span></span><br><span class="line">        +<span class="string">'DEFINE DEFINING DEFINITION DELETE DELETING DEMAND DESCENDING DESCRIBE DESTINATION DIALOG DIRECTORY DISTANCE DISTINCT DIVIDE DIVIDE-CORRESPONDING '</span></span><br><span class="line">        +<span class="string">'DUPLICATE DUPLICATES DURING DYNAMIC EDIT EDITOR-CALL ELSE ELSEIF ENCODING ENDING ENDON ENTRIES ERRORS EVENT EVENTS EXCEPTION EXCEPTIONS EXCEPTION-TABLE '</span></span><br><span class="line">        +<span class="string">'EXCLUDE EXCLUDING EXIT EXIT-COMMAND EXP EXPORT EXPORTING EXTENDED EXTENSION EXTRACT FETCH FIELD FIELD-GROUPS FIELDS NO FIELD-SYMBOLS FILTER FINAL FIND '</span></span><br><span class="line">        +<span class="string">'FIRST FLOOR FOR FORMAT FORWARD BACKWARD FOUND FRAC FRAME FREE FRIENDS FROM FUNCTION-POOL GET GIVING GROUP HANDLER HASHED HAVING HEADER HEADING '</span></span><br><span class="line">        +<span class="string">'HELP-ID HIDE HIGH LOW HOLD HOTSPOT ICON ID IGNORING IMMEDIATELY IMPLEMENTATION IMPORT IMPORTING IN INCLUDE INCREMENT INDEX INDEX-LINE INHERITING '</span></span><br><span class="line">        +<span class="string">'INIT INITIAL INITIALIZATION INNER INSERT INSTANCES INTENSIFIED INTERFACES INTERVALS INTO APPENDING INVERTED-DATE IS ITAB JOIN KEEPING '</span></span><br><span class="line">        +<span class="string">'KEY KEYS KIND LANGUAGE LAST LEADING LEAVE LEFT LEFT-JUSTIFIED CIRCULAR LEGACY LENGTH LIKE LINE LINE-COUNT LINES LINE-SELECTION '</span></span><br><span class="line">        +<span class="string">'LINE-SIZE LIST LIST-PROCESSING LOAD LOAD-OF-PROGRAM LOCAL LOCALE LOG LOG10 LOWER '</span></span><br><span class="line">        +<span class="string">'MARGIN MARK MASK MATCH MAX MAXIMUM MEMORY MESSAGE MESSAGE-ID MESSAGES METHODS MIN MOD MODE IF MODIFIER MODIFY MOVE MOVE-CORRESPONDING '</span></span><br><span class="line">        +<span class="string">'MULTIPLY MULTIPLY-CORRESPONDING NEW NEW-LINE NEW-PAGE NEXT NO- NODES NODETABLE NO-DISPLAY NO-GAP NO-GAPS NO-HEADING WITH-HEADING NON NO-SCROLLING '</span></span><br><span class="line">        +<span class="string">'SCROLLING NOT NO-TITLE WITH-TITLE NO-ZERO NP NS NUMBER OBJECT OBLIGATORY OCCURENCE OCCURENCES OCCURS OF OFF OFFSET ON ONLY ONOFF OPEN '</span></span><br><span class="line">        +<span class="string">'OPTION OPTIONAL OR ORDER OTHERS OUTER OUTPUT-LENGTH OVERLAY PACK PACKAGE PAGE LAST PAGES PARAMETER PARAMETERS PARAMETER-TABLE '</span></span><br><span class="line">        +<span class="string">'PART PERFORM PERFORMING PFN PF-STATUS PLACES POS_HIGH POS_LOW POSITION POSITIONS PRIMARY PRINT PRINT-CONTROL PRIVATE PROCESS PROGRAM PROPERTY '</span></span><br><span class="line">        +<span class="string">'PUBLIC PROTECTED PRIVATE PUSHBUTTON PUT QUICKINFO RADIOBUTTON RAISE RAISING RANGE RANGES READ RECEIVE RECEIVING REDEFINITION '</span></span><br><span class="line">        +<span class="string">'REF REFERENCE REFRESH REJECT RENAMING REPLACE REPLACEMENT REPORT RESERVE RESET RESOLUTION RESULTS RETURN RETURNING RIGHT RIGHT-JUSTIFIED '</span></span><br><span class="line">        +<span class="string">'ROLLBACK ROWS RUN SCAN SCREEN SCREEN-GROUP1 SCREEN-GROUP2 SCREEN-GROUP3 SCREEN-GROUP4 SCREEN-GROUP5 SCREEN-INPUT SCREEN-INTENSIFIED SCROLL '</span></span><br><span class="line">        +<span class="string">'SCROLL-BOUNDARY SEARCH SECTION SELECT SELECTION SELECTIONS SELECTION-SCREEN SELECTION-SET SELECTION-TABLE SELECT-OPTIONS SEND SEPARATED SET '</span></span><br><span class="line">        +<span class="string">'SHARED SHIFT SIGN SIN SINGLE DISTINCT SINH SIZE SKIP SORT SORTABLE SPECIFIED SPLIT SQL SQRT STABLE STAMP STANDARD START STARTING '</span></span><br><span class="line">        +<span class="string">'STATICS STEP-LOOP STOP STRLEN STRUCTURE SUBMIT SUBTRACT SUBTRACT-CORRESPONDING SUFFIX SUM SUPPLY SUPPRESS SYMBOLS SYSTEM-EXCEPTIONS TABLE TABLENAME '</span></span><br><span class="line">        +<span class="string">'TABLES TABLEVIEW TAN TANH TASK TEXT THEN TIME TIMES TITLE TITLEBAR TO TOPIC TOP-OF-PAGE TRAILING TRANSACTION TRANSFER TRANSLATE TRUNC TYPE '</span></span><br><span class="line">        +<span class="string">'TYPELIKE TYPE-POOL TYPE-POOLS TYPES ULINE UNION UNIQUE UNIT UNTIL UP UPDATE UPPER USER-COMMAND USING VALUE VALUES VARY VARYING '</span></span><br><span class="line">        +<span class="string">'VERSION VIA WAIT WHEN WHERE WINDOW WITH WORK WRITE XSTRLEN ZONE TRANSPORTING '</span></span><br><span class="line">        +<span class="string">'CA CN CO CP CS EQ GE GT LE LT NA NE'</span></span><br><span class="line">        +<span class="string">'START-OF-SELECTION START-OF-PAGE END-OF-PAGE END-OF-SELECTION AT ENDAT'</span>,</span><br><span class="line">      literal: <span class="string">'abap_true abap_false'</span>,</span><br><span class="line">      built_in: <span class="string">'DO FORM IF LOOP MODULE START-OF_FILE DEFINE WHILE BEGIN ENDDO ENDFORM ENDIF ENDLOOP ENDMODULE END-OF_FILE END-OF-DEFINITION ENDWHILE END'</span></span><br><span class="line">        +<span class="string">' METHOD ENDMETHOD CHAIN ENDCHAIN CASE ENDCASE FUNCTION ENDFUNCTION ELSEIF ELSE TRY ENDTRY CATCH '</span></span><br><span class="line">    &#125;,</span><br><span class="line">    contains: [ </span><br><span class="line">      hljs.APOS_STRING_MODE,</span><br><span class="line">      hljs.NUMBER_MODE,</span><br><span class="line">      &#123;</span><br><span class="line">        className: <span class="string">'comment'</span>,</span><br><span class="line">        begin: <span class="string">'^[*]'</span>,</span><br><span class="line">        end: <span class="string">'$'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        className: <span class="string">'comment'</span>,</span><br><span class="line">        begin: <span class="string">'\b*"'</span>,</span><br><span class="line">        end: <span class="string">'$'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        className: <span class="string">'built_in'</span>,</span><br><span class="line">        begin: <span class="string">'CALL +([A-Z])'</span>,</span><br><span class="line">        end:<span class="string">' +'</span>,</span><br><span class="line">        relevance: <span class="number">10</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="3-Create-a-file-node-modules-highlight-js-styles-abap-css-under-Hexo-base-folder-and-add-the-below-code"><a href="#3-Create-a-file-node-modules-highlight-js-styles-abap-css-under-Hexo-base-folder-and-add-the-below-code" class="headerlink" title="3. Create a file .\node_modules\highlight.js\styles\abap.css under Hexo base folder, and add the below code"></a>3. Create a file <code>.\node_modules\highlight.js\styles\abap.css</code> under Hexo base folder, and add the below code</h4><p>The ABAP language css file is downloaded from <a href="https://raw.githubusercontent.com/cassioiks/highlight.js/f1b511817f2fda61304dead6725daac47704f29b/src/styles/abap.css" target="_blank" rel="noopener">GitHub</a>.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">ABAP styles by Cassio Binkowski &lt;cassioiks@gmail.com&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hljs</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">overflow-x</span>: auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.hljs-keyword</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0005fb</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-class">.hljs-string</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4da31e</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-class">.hljs-comment</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#7c7879</span>;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-class">.hljs-built_in</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000007</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.hljs-literal</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000007</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.hljs-subst</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.hljs-number</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#5aceff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-Update-the-file-node-modules-hexo-util-highlight-alias-json-under-Hexo-base-folder"><a href="#4-Update-the-file-node-modules-hexo-util-highlight-alias-json-under-Hexo-base-folder" class="headerlink" title="4. Update the file \node_modules\hexo-util\highlight_alias.json under Hexo base folder"></a>4. Update the file <code>\node_modules\hexo-util\highlight_alias.json</code> under Hexo base folder</h4><p>Add the below field-value mappings to alias object</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"abap"</span>: <span class="string">"abap"</span>,</span><br><span class="line"><span class="string">"ABAP"</span>: <span class="string">"abap"</span>,</span><br></pre></td></tr></table></figure><p>Add the below value to languages array</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"abap"</span>,</span><br></pre></td></tr></table></figure><h3 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h3><p>Run <code>hexo clean</code>, <code>hexo generate</code> to generate the files. Below is the result with ABAP code highlighting.</p><figure class="highlight abap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> edisyn <span class="keyword">into</span> <span class="keyword">table</span> i_edisyn</span><br><span class="line">                         <span class="keyword">where</span> idoctyp <span class="keyword">eq</span> doctyp</span><br><span class="line">                         <span class="keyword">and</span>   cimtyp  <span class="keyword">eq</span> cimtyp.</span><br><span class="line">    <span class="built_in">if</span> sy-subrc ne <span class="number">0</span>. <span class="comment">"muß edisyn noch gemerged werden?</span></span><br><span class="line">      ....</span><br><span class="line">    <span class="built_in">endif</span>.<span class="comment">"EDISYN</span></span><br><span class="line"><span class="comment">* nun kann man aus der i_edisyn i_idocsyn füllen</span></span><br><span class="line">    <span class="built_in">loop</span> <span class="keyword">at</span> i_edisyn.</span><br><span class="line">      <span class="keyword">clear</span> i_idocsyn.</span><br><span class="line">      <span class="keyword">move</span>-corresponding i_edisyn <span class="keyword">to</span> i_idocsyn.</span><br><span class="line">      <span class="keyword">move</span> i_edisyn-posno <span class="keyword">to</span> i_idocsyn-nr.</span><br><span class="line">      <span class="keyword">append</span> i_idocsyn.</span><br><span class="line">    <span class="built_in">endloop</span>.</span><br><span class="line">  <span class="built_in">endif</span>.<span class="comment">"cimtyp</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">IF</span> CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( ) = <span class="literal">abap_true</span>.</span><br><span class="line">    <span class="keyword">READ</span> <span class="keyword">TABLE</span> i_idocsyn <span class="keyword">WITH</span> <span class="keyword">KEY</span> SEGTYP = CL_IDOC_PORT_DEF=&gt;ENH_SEGMENT <span class="keyword">TRANSPORTING</span> <span class="keyword">NO</span> <span class="keyword">FIELDS</span>.</span><br><span class="line">    <span class="built_in">IF</span> sy-subrc &lt;&gt; <span class="number">0</span>.</span><br><span class="line">      <span class="keyword">DESCRIBE</span> <span class="keyword">TABLE</span> i_idocsyn <span class="keyword">LINES</span> <span class="keyword">COUNT</span>.</span><br><span class="line">      <span class="keyword">READ</span> <span class="keyword">TABLE</span> i_idocsyn <span class="keyword">INDEX</span> <span class="keyword">COUNT</span> <span class="keyword">INTO</span> l_LAST.</span><br><span class="line">      L_LAST-nr = L_LAST-nr + <span class="number">1</span>.</span><br><span class="line">      l_LAST-segtyp = CL_IDOC_PORT_DEF=&gt;enh_segment.</span><br><span class="line">      <span class="keyword">CLEAR</span>: L_LAST-parseg,  L_LAST-mustfl, l_last-parpno.</span><br><span class="line">      L_LAST-occmin = <span class="number">1</span>.</span><br><span class="line">      L_LAST-hlevel = <span class="number">01</span>.</span><br><span class="line">      L_LAST-occmax = <span class="number">999999</span>.</span><br><span class="line">      <span class="keyword">APPEND</span> L_LAST <span class="keyword">TO</span> i_idocsyn.</span><br><span class="line">      <span class="keyword">move</span>-corresponding L_LAST <span class="keyword">to</span> i_edisyn.</span><br><span class="line">      <span class="keyword">move</span> L_LAST <span class="keyword">to</span> i_edisyn-posno.</span><br><span class="line">      <span class="keyword">append</span> i_edisyn.</span><br><span class="line">    <span class="built_in">ENDIF</span>.</span><br><span class="line">  <span class="built_in">ENDIF</span>.</span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://github.com/isagalaev/highlight.js/pull/1259" target="_blank" rel="noopener">Add ABAP Language to highlight.js - GitHub</a></p>]]></content>
      
      <categories>
          
          <category> ABAP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Website </tag>
            
            <tag> Hexo </tag>
            
            <tag> SAP </tag>
            
            <tag> ABAP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Backup Hexo using GitHub</title>
      <link href="/2018/03/hexo-backup/"/>
      <content type="html"><![CDATA[<h3 id="Assumption"><a href="#Assumption" class="headerlink" title="Assumption"></a>Assumption</h3><p>You have already installed Git from <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a>, installed Node.js, set up Hexo for your website, created an account in GitHub and created a repository there. </p><h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>You want to backup Hexo website data and restore it from anothter computer.</p><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>Log on GitHub with your account. Create a branch such as <code>backup</code> for repository &lt;account_name&gt;.github.io</p><h3 id="Backup"><a href="#Backup" class="headerlink" title="Backup"></a>Backup</h3><ul><li><p>Open the file <code>.gitignore</code> in Hexo base folder, and check if it contains the below two entries. If no, add them to the file.</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/.deploy_git</span></span><br><span class="line"><span class="string">/node_modules</span></span><br></pre></td></tr></table></figure><p>Directory <code>/.deploy_git</code> contains the files after generation by command <code>hexo generate</code>. We don’t need to backup them.<br>Directory <code>/node_modules</code> contains the node.js modules. We don’t need to backup them.</p></li><li><p>Execute the below command in the first backup</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Init Git</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># Create the backup branch, and switch to the new branch</span></span><br><span class="line">git checkout -b backup</span><br><span class="line"><span class="comment"># Link a remote repository to origin</span></span><br><span class="line">git remote add origin git@github.com:gary5496/gary5496.github.io.git</span><br></pre></td></tr></table></figure></li><li><p>Execute the below command in each backup</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Add the files and sub-directories in the current directory to staging area</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># Commit the changes in the staging area to current branch</span></span><br><span class="line">git commit -m <span class="string">"commit_comments"</span></span><br><span class="line"><span class="comment"># Push the backup branch to remote repository backup branch</span></span><br><span class="line">git push origin backup</span><br></pre></td></tr></table></figure></li></ul><h3 id="Restore"><a href="#Restore" class="headerlink" title="Restore"></a>Restore</h3><p>If you need to restore the Hexo websites in another computer, you have to follow the <a href="https://gary5496.github.io/2018/03/hexo-github-setup/">Hexo setup guide</a> to set up the Hexo in another computer first. Then, run the below command the clone the remote repository backup branch to the local directory.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Clone the remote repository backup branch to the current directory</span></span><br><span class="line">git <span class="built_in">clone</span> -b backup git@github.com:gary5496/gary5496.github.io.git</span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="http://blog.csdn.net/zk673820543/article/details/52698760" target="_blank" rel="noopener">http://blog.csdn.net/zk673820543/article/details/52698760</a><br><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a><br><a href="http://bbs.itheima.com/forum.php?mod=viewthread&amp;tid=346526&amp;ordertype=1" target="_blank" rel="noopener">http://bbs.itheima.com/forum.php?mod=viewthread&amp;tid=346526&amp;ordertype=1</a></p>]]></content>
      
      <categories>
          
          <category> Website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Website </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Shadow copy and Deep copy in JavaScript</title>
      <link href="/2018/03/javascript-copy-types/"/>
      <content type="html"><![CDATA[<h3 id="Shadow-Copy"><a href="#Shadow-Copy" class="headerlink" title="Shadow Copy"></a>Shadow Copy</h3><p>In a shadow copy, the <code>simple value</code> properties of the source object is copied to the target object. However, for those <code>object</code> properties and methods of source object, the reference is assigned to the target object, instead of copy.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Chinese = &#123;</span><br><span class="line">    nation: <span class="string">"Chinese"</span>,</span><br><span class="line">    birthPlace: [<span class="string">"Beijing"</span>, <span class="string">"Shanghai"</span>]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> Doctor = &#123;</span><br><span class="line">    career: <span class="string">"Doctor"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extendCopy</span>(<span class="params">p</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> p) &#123; </span><br><span class="line">        c[i] = p[i];</span><br><span class="line">    &#125;    </span><br><span class="line">    c.uber = p;    </span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Doctor = extendCopy(Chinese);</span><br><span class="line"></span><br><span class="line">Doctor.birthPlace.push(<span class="string">"Hongkong"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(Doctor.birthPlace);     <span class="comment">//["Beijing", "Shanghai", "Hongkong"]</span></span><br><span class="line"><span class="built_in">console</span>.log(Chinese.birthPlace);    <span class="comment">//["Beijing", "Shanghai", "Hongkong"]</span></span><br></pre></td></tr></table></figure><h3 id="Deep-Copy"><a href="#Deep-Copy" class="headerlink" title="Deep Copy"></a>Deep Copy</h3><p>In a deep copy, all the properties and methods of the source object is copied to the target object.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Chinese = &#123;</span><br><span class="line">    nation: <span class="string">"Chinese"</span>,</span><br><span class="line">    birthPlace: [<span class="string">"Beijing"</span>, <span class="string">"Shanghai"</span>]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> Doctor = &#123;</span><br><span class="line">    career: <span class="string">"Doctor"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopy</span>(<span class="params">p, c</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = c || &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> p[i] === <span class="string">'object'</span>) &#123;</span><br><span class="line">            c[i] = (p[i].constructor === <span class="built_in">Array</span>) ? [] : &#123;&#125;;</span><br><span class="line">            deepCopy(p[i], c[i]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            c[i] = p[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Doctor = deepCopy(Chinese);</span><br><span class="line"></span><br><span class="line">Doctor.birthPlace.push(<span class="string">"Hongkong"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(Doctor.birthPlace);     <span class="comment">//["Beijing", "Shanghai", "Hongkong"]</span></span><br><span class="line"><span class="built_in">console</span>.log(Chinese.birthPlace);    <span class="comment">//["Beijing", "Shanghai"]</span></span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance_continued.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance_continued.html</a></p>]]></content>
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Prototype in JavaScript</title>
      <link href="/2018/03/javascript-prototype/"/>
      <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>To simulate the OO class feature and implement the inheritance functionality in JavaScript, we have the below methods.</p><h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><h4 id="1-Inherit-by-calling-parent-constructor-function"><a href="#1-Inherit-by-calling-parent-constructor-function" class="headerlink" title="1. Inherit by calling parent constructor function"></a>1. Inherit by calling parent constructor function</h4><p>Using this method, all the properties and methods of parent function will be copied to the child objects. </p><h5 id="Cons"><a href="#Cons" class="headerlink" title="Cons"></a>Cons</h5><ol><li>It will cost more memory if the parent function has lots of properties and methods or the inheritance chain is long.</li><li>The prototype chain is not correct.</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span>(<span class="params">species</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.species = species;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span>(<span class="params">name, color</span>)</span>&#123;</span><br><span class="line">    Animal.call(<span class="keyword">this</span>, <span class="string">"Cat"</span>);</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">"Kitty"</span>,<span class="string">"Yellow"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(cat1.species);    <span class="comment">//Cat</span></span><br><span class="line"><span class="built_in">console</span>.log(cat1.__proto__ === Cat.prototype);  <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat1.__proto__.__proto__ === <span class="built_in">Object</span>.prototype);  <span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>In this case, the prototype chain will be:</p><pre><code>new Cat() ----&gt; Cat.prototype ----&gt; Object.prototype ----&gt; null</code></pre><h4 id="2-Inherit-with-one-parent-object"><a href="#2-Inherit-with-one-parent-object" class="headerlink" title="2. Inherit with one parent object"></a>2. Inherit with one parent object</h4><p>Using this method, <strong>one parent object</strong> will be created to save all the properties and methods of parent function, and the parent object is linked to <code>__proto__</code> property of the child objects. </p><h5 id="Pros"><a href="#Pros" class="headerlink" title="Pros:"></a>Pros:</h5><ol><li>It will cost less memory when <strong>creating</strong> new child objects if the parent function has lots of properties and methods or the inheritance chain is long.</li><li>The prototype chain is correct.</li></ol><h5 id="Cons-1"><a href="#Cons-1" class="headerlink" title="Cons:"></a>Cons:</h5><ol><li>It will cost more memory when <strong>defining</strong> the child function.</li><li>Since one parent object is linked to multiple child objects, the change to the parent object will affect multiple child objects.</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span>(<span class="params">species</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.species = species;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span>(<span class="params">name, color</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Cat.prototype = <span class="keyword">new</span> Animal(&#123;<span class="attr">species</span>: <span class="string">"Cat"</span>&#125;);</span><br><span class="line">Cat.prototype.constructor = Cat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">"Kitty"</span>,<span class="string">"Yellow"</span>);</span><br><span class="line"><span class="keyword">var</span> cat2 = <span class="keyword">new</span> Cat(<span class="string">"Miao"</span>,<span class="string">"White"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dog</span>(<span class="params">name, color</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dog.prototype = <span class="keyword">new</span> Animal(&#123;<span class="attr">species</span>: <span class="string">"Dog"</span>&#125;);</span><br><span class="line">Dog.prototype.constructor = Dog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dog1 = <span class="keyword">new</span> Dog(<span class="string">"Wan"</span>,<span class="string">"Yellow"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(cat1.species.species);    <span class="comment">//Cat</span></span><br><span class="line"><span class="built_in">console</span>.log(cat1.__proto__ === cat2.__proto__);   <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat1.__proto__ === Cat.prototype);  <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat1.__proto__.__proto__ === Animal.prototype);  <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(dog1.species.species);    <span class="comment">//Dog</span></span><br><span class="line"><span class="built_in">console</span>.log(Dog.prototype === Cat.prototype);   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sp = cat1.species;</span><br><span class="line">sp.species = <span class="string">"New Cat"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(cat1.species.species);    <span class="comment">//New Cat  </span></span><br><span class="line"><span class="built_in">console</span>.log(cat2.species.species);    <span class="comment">//New Cat</span></span><br></pre></td></tr></table></figure><p>In this case, the prototype chain will be:</p><pre><code>new Cat() ----&gt; Cat.prototype ----&gt; Animal.prototype ----&gt; Object.prototype ----&gt; null</code></pre><h4 id="3-Inherit-with-new-function-object-Recommended"><a href="#3-Inherit-with-new-function-object-Recommended" class="headerlink" title="3. Inherit with new function object - Recommended"></a>3. Inherit with new function object - Recommended</h4><p>Using this method, all the properties and methods of parent function will be copied to the child objects.</p><h5 id="Pros-1"><a href="#Pros-1" class="headerlink" title="Pros:"></a>Pros:</h5><ol><li>It will cost less memory when <strong>defining</strong> the child function, since only one blank function object is created.</li><li>The prototype chain is correct.</li><li>The change to one child object will not affect other child objects.</li></ol><h5 id="Cons-2"><a href="#Cons-2" class="headerlink" title="Cons:"></a>Cons:</h5><ol><li>It will cost more memory when <strong>creating</strong> new child objects, since all the properties and methods of parent function will be copied to the child objects, instead of linking one parent object to the child objects.</li></ol><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span>(<span class="params">species</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.species = species;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span>(<span class="params">name, color</span>)</span>&#123;</span><br><span class="line">    Animal.call(<span class="keyword">this</span>, &#123;<span class="attribute">species</span>: <span class="string">"Cat"</span>&#125;);</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = <span class="built_in">color</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line">F.prototype = Animal.prototype;</span><br><span class="line">Cat.prototype = <span class="keyword">new</span> F();</span><br><span class="line">Cat.prototype.constructor = Cat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">"Kitty"</span>,<span class="string">"Yellow"</span>);</span><br><span class="line"><span class="keyword">var</span> cat2 = <span class="keyword">new</span> Cat(<span class="string">"Miao"</span>,<span class="string">"White"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dog</span>(<span class="params">name, color</span>)</span>&#123;</span><br><span class="line">    Animal.call(<span class="keyword">this</span>, &#123;<span class="attribute">species</span>: <span class="string">"Dog"</span>&#125;);</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = <span class="built_in">color</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line">F.prototype = Animal.prototype;</span><br><span class="line">Dog.prototype = <span class="keyword">new</span> F();</span><br><span class="line">Dog.prototype.constructor = Dog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dog1 = <span class="keyword">new</span> Dog(<span class="string">"Wan"</span>,<span class="string">"Yellow"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(cat1.species.species);    <span class="comment">//Cat</span></span><br><span class="line"><span class="built_in">console</span>.log(cat1.__proto__ === cat2.__proto__);   <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat1.__proto__ === Cat.prototype);  <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat1.__proto__.__proto__ === Animal.prototype);  <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(dog1.species.species);    <span class="comment">//Dog</span></span><br><span class="line"><span class="built_in">console</span>.log(Dog.prototype === Cat.prototype);   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sp = cat1.species;</span><br><span class="line">sp.species = <span class="string">"New Cat"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(cat1.species.species);    <span class="comment">//New Cat  </span></span><br><span class="line"><span class="built_in">console</span>.log(cat2.species.species);    <span class="comment">//Cat</span></span><br></pre></td></tr></table></figure><p>In this case, the prototype chain will be:</p><pre><code>new Cat() ----&gt; Cat.prototype ----&gt; Animal.prototype ----&gt; Object.prototype ----&gt; null</code></pre><h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><ul><li>When create a new object using constructor function, the <code>__proto__</code> of the new created object will point to the same object of <code>ConstructorFunction.prototype</code>.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span>(<span class="params">species</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.species = species;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> animal = <span class="keyword">new</span> Animal(<span class="string">"Cat"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(animal.__proto__ === Animal.prototype);  <span class="comment">//true</span></span><br></pre></td></tr></table></figure><ul><li>We can create a common function for the inheritance in the third method. </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span>(<span class="params">species</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.species = species;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span>(<span class="params">name, color</span>)</span>&#123;</span><br><span class="line">    Animal.call(<span class="keyword">this</span>, &#123;<span class="attr">species</span>: <span class="string">"Cat"</span>&#125;);</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inherits</span>(<span class="params">Child, Parent</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">    F.prototype = Parent.prototype;</span><br><span class="line">    Child.prototype = <span class="keyword">new</span> F();</span><br><span class="line">    Child.prototype.constructor = Child;</span><br><span class="line">    Child.uber = Parent.prototype;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">inherits(Cat, Animal);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">"Kitty"</span>,<span class="string">"Yellow"</span>);</span><br><span class="line"><span class="keyword">var</span> cat2 = <span class="keyword">new</span> Cat(<span class="string">"Miao"</span>,<span class="string">"White"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dog</span>(<span class="params">name, color</span>)</span>&#123;</span><br><span class="line">    Animal.call(<span class="keyword">this</span>, &#123;<span class="attr">species</span>: <span class="string">"Dog"</span>&#125;);</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">inherits(Dog, Animal);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dog1 = <span class="keyword">new</span> Dog(<span class="string">"Wan"</span>,<span class="string">"Yellow"</span>);</span><br></pre></td></tr></table></figure><ul><li>We can define the new methods for the parent function and child function, in the prototype of the constructor function.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Animal.prototype.getspecies = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.species.species;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Dog.prototype.getname = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(dog1.getspecies()); <span class="comment">//Dog</span></span><br><span class="line"><span class="built_in">console</span>.log(dog1.getname());    <span class="comment">//Wan</span></span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance.html</a><br><a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344997013405abfb7f0e1904a04ba6898a384b1e925000" target="_blank" rel="noopener">Prototype Inheritance by Liao Xue Feng</a></p>]]></content>
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Closure in JavaScript</title>
      <link href="/2018/03/javascript-closure/"/>
      <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>In a function, the variables may come from global variable like <code>window</code>, local variable, or the variable of its ancestor functions. If the variable comes from its ancestor functions, it is called <code>Closure</code> in JavaScript. </p><p>There are three variable scopes: <code>Local</code>, <code>Closure</code> and <code>Global</code>. If the variable is coming from its ancestor function and the child function is still being used, the variable in the ancestor function will be saved and it will not be recycled by JavaScript garbage collection.</p><p>In JavaScript garbage collection, if the where-used list for a variable/function/object is 0, it will be recycled. Otherwise, it will be kept. If <code>Closure</code> is used and the child function is still in used, the ancestor function and its variable will be kept since the where-used list is not 0.</p><h3 id="Understand-variable-scope"><a href="#Understand-variable-scope" class="headerlink" title="Understand variable scope"></a>Understand variable scope</h3><p>In the below case, the output of <code>f1, f2, f3</code> will be all <code>16</code>, because the variable scope is <strong>finalized</strong> in the <code>return arr;</code> statement. When the statement <code>return arr;</code> is executed, the variable <code>i</code> is <code>4</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">3</span>; i++) &#123;</span><br><span class="line">        arr.push(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> i * i;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> results = count();</span><br><span class="line"><span class="keyword">var</span> f1 = results[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">var</span> f2 = results[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> f3 = results[<span class="number">2</span>];</span><br><span class="line">f1();    <span class="comment">//16</span></span><br><span class="line">f2();    <span class="comment">//16</span></span><br><span class="line">f3();    <span class="comment">//16</span></span><br></pre></td></tr></table></figure><p>To fix the issue in the above case, we can change the code as below. In the below case, the variable <code>i</code> is <strong>finalized</strong> and passed to <code>n</code> when the statement <code>(function(n){...})(i);</code> is executed. When the statement is executed, the variable <code>i</code> is <code>1, 2, 3</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=<span class="number">3</span>; i++) &#123;</span><br><span class="line">        arr.push((<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> n * n;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)(i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> results = count();</span><br><span class="line"><span class="keyword">var</span> f1 = results[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">var</span> f2 = results[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> f3 = results[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">f1(); <span class="comment">// 1</span></span><br><span class="line">f2(); <span class="comment">// 4</span></span><br><span class="line">f3(); <span class="comment">// 9</span></span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html</a><br><a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/00143449934543461c9d5dfeeb848f5b72bd012e1113d15000" target="_blank" rel="noopener">Closure by Liao Xue Feng</a></p>]]></content>
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>this keyword in JavaScript</title>
      <link href="/2018/03/javascript-this/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>After reading the below few posts about <code>this</code> variable in JavaScript. I think I have to write a post to note down my understanding about it.</p><p><a href="http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html</a><br><a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000</a></p><h3 id="Function-call"><a href="#Function-call" class="headerlink" title="Function call"></a>Function call</h3><p>In the normal function call, <code>this</code> is the global variable, which is <code>window</code> when the page is loaded in web browser. <code>test()</code> is the same as <code>window.test()</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">alert(<span class="keyword">this</span>.x);    <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>.x);</span><br><span class="line">&#125;</span><br><span class="line">test();    <span class="comment">//1</span></span><br></pre></td></tr></table></figure><h3 id="Method-call"><a href="#Method-call" class="headerlink" title="Method call"></a>Method call</h3><p>When the function is used as a method of an object, <code>this</code> is <code>reference to the object</code> when the method (function) is called.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> o = &#123;</span><br><span class="line">    x: <span class="number">2</span>,</span><br><span class="line">    method: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="keyword">this</span>.x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">o.method();    <span class="comment">//2</span></span><br></pre></td></tr></table></figure><h3 id="Constructor-function"><a href="#Constructor-function" class="headerlink" title="Constructor function"></a>Constructor function</h3><p>When the function is used as a constructor function, <code>this</code> is <code>reference to the object</code> in the construction function. </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>.x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">this</span>.method = test;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> o();</span><br><span class="line">o.method();    <span class="comment">//2</span></span><br><span class="line">test();    <span class="comment">//1</span></span><br></pre></td></tr></table></figure><h3 id="Method-apply"><a href="#Method-apply" class="headerlink" title="Method apply"></a>Method apply</h3><p>Developer can use the method <code>object.apply</code> to change the binding of <code>this</code>. </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> test = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>.x);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> o = &#123;</span><br><span class="line">    x: <span class="number">2</span>,</span><br><span class="line">    m: test</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">test();    <span class="comment">//1</span></span><br><span class="line">test.apply(o);    <span class="comment">//2</span></span><br></pre></td></tr></table></figure><h3 id="Function-call-in-method-call"><a href="#Function-call-in-method-call" class="headerlink" title="Function call in method call"></a>Function call in method call</h3><p>If <code>this</code> variable is used in a function call in an object method call, it will be the reference to <code>window</code>, instead of the <code>reference to the object</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> Foo = &#123;</span><br><span class="line">    x: <span class="number">2</span>,</span><br><span class="line">    method: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">        <span class="keyword">var</span> test = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.x);</span><br><span class="line">        &#125;</span><br><span class="line">        test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">Foo.method();    <span class="comment">//1, which is the global variable</span></span><br></pre></td></tr></table></figure><p>To set <code>this</code> to the <code>reference to the object</code> in the above case, you can use a variable like <code>that</code> to store <code>this</code> variable as below.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> Foo = &#123;</span><br><span class="line">    x: <span class="number">2</span>,</span><br><span class="line">    method: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> test = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(that.x);</span><br><span class="line">        &#125;</span><br><span class="line">        test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">Foo.method();    <span class="comment">//2, which is the global variable</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Convert InputStream to String (Java)</title>
      <link href="/2018/03/java-convert-inputstream-to-string/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>Sometimes, you would need to convert InputStream to String, and then manipulate it, such as check the String in the trace log, etc.</p><p>Here are some ways to convert an InputStream to a String. See below link for details.</p><p><a href="https://stackoverflow.com/questions/309424/read-convert-an-inputstream-to-a-string" target="_blank" rel="noopener">https://stackoverflow.com/questions/309424/read-convert-an-inputstream-to-a-string</a></p><h3 id="Ways-to-convert-an-InputStream-to-a-String"><a href="#Ways-to-convert-an-InputStream-to-a-String" class="headerlink" title="Ways to convert an InputStream to a String"></a>Ways to convert an InputStream to a String</h3><ul><li>Using IOUtils.toString (<code>Apache Utils</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String result = IOUtils.toString(inputStream, StandardCharsets.UTF_8);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String result = IOUtils.toString(inputStream, <span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><ul><li>Using CharStreams (<code>guava</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String result = CharStreams.toString(<span class="keyword">new</span> InputStreamReader(</span><br><span class="line">      inputStream, Charsets.UTF_8));</span><br></pre></td></tr></table></figure><ul><li>Using Scanner (<code>JDK</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Scanner s = <span class="keyword">new</span> Scanner(inputStream).useDelimiter(<span class="string">"\\A"</span>);</span><br><span class="line">String result = s.hasNext() ? s.next() : <span class="string">""</span>;</span><br></pre></td></tr></table></figure><ul><li>Using Stream Api (<code>Java 8</code>). Warning: This solution convert different line breaks (like <code>\r\n</code>) to <code>\n</code>.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String result = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream))</span><br><span class="line">  .lines().collect(Collectors.joining(<span class="string">"\n"</span>));</span><br></pre></td></tr></table></figure><ul><li>Using parallel Stream Api (<code>Java 8</code>). Warning: This solution convert different line breaks (like <code>\r\n</code>) to <code>\n</code>.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String result = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream)).lines()</span><br><span class="line">   .parallel().collect(Collectors.joining(<span class="string">"\n"</span>));</span><br></pre></td></tr></table></figure><ul><li>Using InputStreamReader and StringBuilder (<code>JDK</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> bufferSize = <span class="number">1024</span>;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">char</span>[] buffer = <span class="keyword">new</span> <span class="keyword">char</span>[bufferSize];</span><br><span class="line"><span class="keyword">final</span> StringBuilder out = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">Reader in = <span class="keyword">new</span> InputStreamReader(inputStream, <span class="string">"UTF-8"</span>);</span><br><span class="line"><span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">    <span class="keyword">int</span> rsz = in.read(buffer, <span class="number">0</span>, buffer.length);</span><br><span class="line">    <span class="keyword">if</span> (rsz &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    out.append(buffer, <span class="number">0</span>, rsz);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> out.toString();</span><br></pre></td></tr></table></figure><ul><li>Using StringWriter and IOUtils.copy (<code>Apache Commons</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">StringWriter writer = <span class="keyword">new</span> StringWriter();</span><br><span class="line">IOUtils.copy(inputStream, writer, <span class="string">"UTF-8"</span>);</span><br><span class="line"><span class="keyword">return</span> writer.toString();</span><br></pre></td></tr></table></figure><ul><li>Using ByteArrayOutputStream and inputStream.read (<code>JDK</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ByteArrayOutputStream result = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> length;</span><br><span class="line"><span class="keyword">while</span> ((length = inputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">    result.write(buffer, <span class="number">0</span>, length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// StandardCharsets.UTF_8.name() &gt; JDK 7</span></span><br><span class="line"><span class="keyword">return</span> result.toString(<span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><ul><li>Using BufferedReader (<code>JDK</code>). Warning: This solution convert different line breaks (like <code>\n\r</code>) to <code>line.separator</code> system property (for example, in Windows to “\r\n”).</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">String newLine = System.getProperty(<span class="string">"line.separator"</span>);</span><br><span class="line">BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream));</span><br><span class="line">StringBuilder result = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">String line; <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">    result.append(flag? newLine: <span class="string">""</span>).append(line);</span><br><span class="line">    flag = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result.toString();</span><br></pre></td></tr></table></figure><ul><li>Using BufferedInputStream and ByteArrayOutputStream (<code>JDK</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(inputStream);</span><br><span class="line">ByteArrayOutputStream buf = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line"><span class="keyword">int</span> result = bis.read();</span><br><span class="line"><span class="keyword">while</span>(result != -<span class="number">1</span>) &#123;</span><br><span class="line">    buf.write((<span class="keyword">byte</span>) result);</span><br><span class="line">    result = bis.read();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// StandardCharsets.UTF_8.name() &gt; JDK 7</span></span><br><span class="line"><span class="keyword">return</span> buf.toString(<span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><ul><li>Using inputStream.read() and StringBuilder (<code>JDK</code>). Warning: This solution has problem with Unicode, for example with Russian text (work correctly only with non-Unicode text)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ch;</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="keyword">while</span>((ch = inputStream.read()) != -<span class="number">1</span>)</span><br><span class="line">    sb.append((<span class="keyword">char</span>)ch);</span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br></pre></td></tr></table></figure><h3 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h3><ol><li><p>Solutions <code>4</code>, <code>5</code> and <code>9</code> convert different line breaks to one.</p></li><li><p>Solution <code>11</code> can’t work correctly with Unicode text</p></li></ol><h3 id="Performance-tests"><a href="#Performance-tests" class="headerlink" title="Performance tests"></a>Performance tests</h3><p>Performance tests for small <code>String</code> (length = 175), url in github (mode = Average Time, system = Linux, score 1,343 is the best):</p><pre><code>              Benchmark                         Mode  Cnt   Score   Error  Units 8. ByteArrayOutputStream and read (JDK)        avgt   10   1,343 ± 0,028  us/op 6. InputStreamReader and StringBuilder (JDK)   avgt   10   6,980 ± 0,404  us/op10. BufferedInputStream, ByteArrayOutputStream  avgt   10   7,437 ± 0,735  us/op11. InputStream.read() and StringBuilder (JDK)  avgt   10   8,977 ± 0,328  us/op 7. StringWriter and IOUtils.copy (Apache)      avgt   10  10,613 ± 0,599  us/op 1. IOUtils.toString (Apache Utils)             avgt   10  10,605 ± 0,527  us/op 3. Scanner (JDK)                               avgt   10  12,083 ± 0,293  us/op 2. CharStreams (guava)                         avgt   10  12,999 ± 0,514  us/op 4. Stream Api (Java 8)                         avgt   10  15,811 ± 0,605  us/op 9. BufferedReader (JDK)                        avgt   10  16,038 ± 0,711  us/op 5. parallel Stream Api (Java 8)                avgt   10  21,544 ± 0,583  us/op</code></pre><p>Performance tests for big <code>String</code> (length = 50100), url in github (mode = Average Time, system = Linux, score 200,715 is the best):</p><pre><code>               Benchmark                        Mode  Cnt   Score        Error  Units 8. ByteArrayOutputStream and read (JDK)        avgt   10   200,715 ±   18,103  us/op 1. IOUtils.toString (Apache Utils)             avgt   10   300,019 ±    8,751  us/op 6. InputStreamReader and StringBuilder (JDK)   avgt   10   347,616 ±  130,348  us/op 7. StringWriter and IOUtils.copy (Apache)      avgt   10   352,791 ±  105,337  us/op 2. CharStreams (guava)                         avgt   10   420,137 ±   59,877  us/op 9. BufferedReader (JDK)                        avgt   10   632,028 ±   17,002  us/op 5. parallel Stream Api (Java 8)                avgt   10   662,999 ±   46,199  us/op 4. Stream Api (Java 8)                         avgt   10   701,269 ±   82,296  us/op10. BufferedInputStream, ByteArrayOutputStream  avgt   10   740,837 ±    5,613  us/op 3. Scanner (JDK)                               avgt   10   751,417 ±   62,026  us/op11. InputStream.read() and StringBuilder (JDK)  avgt   10  2919,350 ± 1101,942  us/op</code></pre><p>Performance test (Average Time) depending on Input Stream length in Windows 7 system:</p><pre><code>length  182    546     1092    3276    9828    29484   58968test8  0.38    0.938   1.868   4.448   13.412  36.459  72.708test4  2.362   3.609   5.573   12.769  40.74   81.415  159.864test5  3.881   5.075   6.904   14.123  50.258  129.937 166.162test9  2.237   3.493   5.422   11.977  45.98   89.336  177.39test6  1.261   2.12    4.38    10.698  31.821  86.106  186.636test7  1.601   2.391   3.646   8.367   38.196  110.221 211.016test1  1.529   2.381   3.527   8.411   40.551  105.16  212.573test3  3.035   3.934   8.606   20.858  61.571  118.744 235.428test2  3.136   6.238   10.508  33.48   43.532  118.044 239.481test10 1.593   4.736   7.527   20.557  59.856  162.907 323.147test11 3.913   11.506  23.26   68.644  207.591 600.444 1211.545</code></pre><h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><p>After you manipulate the InputStream first time, the “cursor” position will be moved to the last of the InputStream. As a result, if you try to manipulate it again, the result will be incorrect. </p><p>If you need to manipulate an InputStream multiple times, you have to run the below codes to reset/reopen it.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">InputStream inputStream = <span class="keyword">new</span> FileInputStream(<span class="string">"in.dat"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// first processing</span></span><br><span class="line">String result = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream))</span><br><span class="line">  .lines().collect(Collectors.joining(<span class="string">"\n"</span>));</span><br><span class="line"></span><br><span class="line">System.out.println(result);</span><br><span class="line"></span><br><span class="line"><span class="comment">// the below code will be required to manipulate FileInputStream multiple times</span></span><br><span class="line">inputStream.close();</span><br><span class="line">inputStream = <span class="keyword">new</span> FileInputStream(<span class="string">"in.dat"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// the below code will be required to manipulate ByteArrayInputStream multiple times</span></span><br><span class="line"><span class="comment">//inputStream.reset();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//second processing</span></span><br><span class="line">String result2 = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream))</span><br><span class="line">  .lines().collect(Collectors.joining(<span class="string">"\n"</span>));</span><br><span class="line"></span><br><span class="line">System.out.println(result2);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PI IDOC metadata issue in Java Stack</title>
      <link href="/2018/03/pi-idoc-metadata-issue-js/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>The PI channel using adapter module <code>IDOCXmlToFlatConvertor</code> with <code>SAPRelease 46C</code> is failed with error message <code>Unable to get meta data for IDOC type &lt;IDOC_TYPE&gt;: SEGMENT_UNKNOWN</code>. </p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>The adapter module <code>IDOCXmlToFlatConvertor</code> is using IDOC metadata in Java stack to transform IDOC from XML format to flat file format. We tried to load the IDOC metadata in PI NWA (Java stack) manually with the <code>Connection Factory</code> and <code>SAPRelease</code> parameters maintained in the PI channel, and the load is failed with error message <code>Service node &lt;node&gt; is not accessible; metadata cannot be shown or manipulated</code>. </p><p>After RFC trace, we find that the ECC RFC function <code>IDOCTYPE_READ_COMPLETE</code> is called by PI when loading IDOC metadata in Java stack. The RFC function is changed in the recent upgrade. In the new change, if the return result of <code>CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( )</code> is true, it will add a new IDOC segment <code>E1IDOCENHANCEMENT</code>, which is valid since release 700 (t-code <code>WE31</code>). Since the new IDOC segment is not valid in release <code>46C</code>, the RFC function will be failed, which causes the failure of PI channel.</p><figure class="highlight abap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">IF</span> CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( ) = <span class="literal">abap_true</span>.</span><br><span class="line">  <span class="keyword">READ</span> <span class="keyword">TABLE</span> LT_SYNTAX <span class="keyword">WITH</span> <span class="keyword">KEY</span> SEGTYP = CL_IDOC_PORT_DEF=&gt;ENH_SEGMENT <span class="keyword">TRANSPORTING</span> <span class="keyword">NO</span> <span class="keyword">FIELDS</span>.</span><br><span class="line">  <span class="built_in">IF</span> sy-subrc &lt;&gt; <span class="number">0</span>.</span><br><span class="line">    <span class="keyword">DESCRIBE</span> <span class="keyword">TABLE</span> LT_SYNTAX <span class="keyword">LINES</span> <span class="keyword">COUNT</span>.</span><br><span class="line">    <span class="keyword">READ</span> <span class="keyword">TABLE</span> lt_syntax <span class="keyword">INDEX</span> <span class="keyword">COUNT</span> <span class="keyword">INTO</span> l_LAST.</span><br><span class="line">    L_LAST-nr = L_LAST-nr + <span class="number">1</span>.</span><br><span class="line">    l_LAST-segtyp = CL_IDOC_PORT_DEF=&gt;enh_segment.</span><br><span class="line">    <span class="keyword">CLEAR</span>: L_LAST-parseg, L_LAST-refsegtyp, L_LAST-mustfl, l_last-parpno.</span><br><span class="line">    L_LAST-occmin = <span class="number">1</span>.</span><br><span class="line">    L_LAST-hlevel = <span class="number">01</span>.</span><br><span class="line">    L_LAST-occmax = <span class="number">999999</span>.</span><br><span class="line">    <span class="keyword">APPEND</span> L_LAST <span class="keyword">TO</span> lt_syntax.</span><br><span class="line">  <span class="built_in">ENDIF</span>.</span><br><span class="line"><span class="built_in">ENDIF</span>.</span><br></pre></td></tr></table></figure><h3 id="Resolution"><a href="#Resolution" class="headerlink" title="Resolution"></a>Resolution</h3><p>To fix the issue, we can maintain a new entry in table EDICONFIG, so that the return result of <code>CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( )</code> is false. With this change, the new IDOC segment will not be added, and it will fix the issue. A table entry in <code>EDICONFIG</code> for the service user with EDI parameter <code>NO_ENHSEND</code> is added by running program <code>RBDENHANCEDDOCUSET</code>. The service user to load IDOC metadata from PI Java stack could be found in the <code>Connection Factory</code> in NWA.</p><figure class="highlight abap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">METHOD</span> send_enhanced_docu.</span><br><span class="line"></span><br><span class="line">  <span class="keyword">DATA</span>: wa <span class="keyword">TYPE</span> ediconfig,</span><br><span class="line">        uname <span class="keyword">like</span> sy-uname.</span><br><span class="line"></span><br><span class="line">  <span class="built_in">IF</span> cl_rfc=&gt;is_external_direct( ) = <span class="literal">abap_true</span>. <span class="comment">" external call only</span></span><br><span class="line">    uname = cl_abap_syst=&gt;get_user_name( ).</span><br><span class="line">    <span class="keyword">SELECT</span>  <span class="keyword">SINGLE</span> * <span class="keyword">FROM</span> ediconfig</span><br><span class="line">      <span class="keyword">INTO</span> wa</span><br><span class="line">       <span class="keyword">WHERE</span> uname = uname</span><br><span class="line">        <span class="keyword">AND</span> edi_global  = <span class="string">' '</span></span><br><span class="line">        <span class="keyword">AND</span> edi_param = <span class="string">'NO_ENHSEND'</span></span><br><span class="line">        <span class="keyword">AND</span> edi_parval = <span class="string">'X'</span>.</span><br><span class="line"></span><br><span class="line">    <span class="built_in">IF</span> sy-subrc = <span class="number">0</span>.</span><br><span class="line">      send_docu = <span class="literal">abap_false</span>.</span><br><span class="line">    <span class="built_in">ELSE</span>.</span><br><span class="line">      send_docu = <span class="literal">abap_true</span>.</span><br><span class="line">    <span class="built_in">ENDIF</span>.</span><br><span class="line"></span><br><span class="line">  <span class="built_in">ELSE</span>.</span><br><span class="line">    send_docu = <span class="literal">abap_true</span>. <span class="comment">"</span></span><br><span class="line">  <span class="built_in">ENDIF</span>.</span><br><span class="line"></span><br><span class="line"><span class="built_in">ENDMETHOD</span>.</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAP </tag>
            
            <tag> IDOC </tag>
            
            <tag> PI </tag>
            
            <tag> Issue Resolution </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PI IDOC metadata issue with error message IDOC_ADAPTER/155</title>
      <link href="/2018/03/pi-idoc-metadata-issue/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>In ECC tRFC monitor (t-code: <code>SM58</code>), user finds that there are failed tRFC calls to PI system with error message <code>IDOC_ADAPTER/155: EDISDEF: Port &amp;1 segment defn &amp;2 in IDoc type &amp;3 CIM type &amp;4 do not exist</code>. </p><blockquote><p>ECC version: 7.50 SP9<br>PI version: 7.40</p></blockquote><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>When a ECC IDOC with PI tRFC port is dispatched, the RFC function  <code>IDOC_INBOUND_ASYNCHRONOUS</code> is called in PI. In PI, it will run the function module with the below call stack. In the below last step, it will call RFC function  <code>IDX_META_SYNTAX_READ</code> to read IDOC metadata from ECC.</p><pre><code>FUNCTION IDOC_INBOUND_ASYNCHRONOUSFUNCTION IDX_INBOUND_XMBFORM idx_inboundFORM idx_inbound_idocFUNCTION IDX_IDOC_TO_XMLFUNCTION IDX_SYNTAX_CHECKFUNCTION IDX_STRUCTURE_GET    FUNCTION IDX_META_SYNTAX_READ</code></pre><p>In the RFC function <code>IDX_META_SYNTAX_READ</code>, it will read the IDOC metadata from database table <code>EDISYN</code> into internal table <code>I_EDISYN</code>, and then add them to internal table <code>I_IDOCSYN</code>. If <code>CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( )</code> returns true, it will read the last record of <code>I_IDOCSYN</code>, use the <code>nr</code> field value of the last record, add <code>1</code>, use it as the <code>nr</code> for the new segment <code>E1IDOCENHANCEMENT</code>, and add the new segment to <code>I_IDOCSYN</code>.</p><figure class="highlight abap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> edisyn <span class="keyword">into</span> <span class="keyword">table</span> i_edisyn</span><br><span class="line">                         <span class="keyword">where</span> idoctyp <span class="keyword">eq</span> doctyp</span><br><span class="line">                         <span class="keyword">and</span>   cimtyp  <span class="keyword">eq</span> cimtyp.</span><br><span class="line">    <span class="built_in">if</span> sy-subrc ne <span class="number">0</span>. <span class="comment">"muß edisyn noch gemerged werden?</span></span><br><span class="line">      ....</span><br><span class="line">    <span class="built_in">endif</span>.<span class="comment">"EDISYN</span></span><br><span class="line"><span class="comment">* nun kann man aus der i_edisyn i_idocsyn füllen</span></span><br><span class="line">    <span class="built_in">loop</span> <span class="keyword">at</span> i_edisyn.</span><br><span class="line">      <span class="keyword">clear</span> i_idocsyn.</span><br><span class="line">      <span class="keyword">move</span>-corresponding i_edisyn <span class="keyword">to</span> i_idocsyn.</span><br><span class="line">      <span class="keyword">move</span> i_edisyn-posno <span class="keyword">to</span> i_idocsyn-nr.</span><br><span class="line">      <span class="keyword">append</span> i_idocsyn.</span><br><span class="line">    <span class="built_in">endloop</span>.</span><br><span class="line">  <span class="built_in">endif</span>.<span class="comment">"cimtyp</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">IF</span> CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( ) = <span class="literal">abap_true</span>.</span><br><span class="line">    <span class="keyword">READ</span> <span class="keyword">TABLE</span> i_idocsyn <span class="keyword">WITH</span> <span class="keyword">KEY</span> SEGTYP = CL_IDOC_PORT_DEF=&gt;ENH_SEGMENT <span class="keyword">TRANSPORTING</span> <span class="keyword">NO</span> <span class="keyword">FIELDS</span>.</span><br><span class="line">    <span class="built_in">IF</span> sy-subrc &lt;&gt; <span class="number">0</span>.</span><br><span class="line">      <span class="keyword">DESCRIBE</span> <span class="keyword">TABLE</span> i_idocsyn <span class="keyword">LINES</span> <span class="keyword">COUNT</span>.</span><br><span class="line">      <span class="keyword">READ</span> <span class="keyword">TABLE</span> i_idocsyn <span class="keyword">INDEX</span> <span class="keyword">COUNT</span> <span class="keyword">INTO</span> l_LAST.</span><br><span class="line">      L_LAST-nr = L_LAST-nr + <span class="number">1</span>.</span><br><span class="line">      l_LAST-segtyp = CL_IDOC_PORT_DEF=&gt;enh_segment.</span><br><span class="line">      <span class="keyword">CLEAR</span>: L_LAST-parseg,  L_LAST-mustfl, l_last-parpno.</span><br><span class="line">      L_LAST-occmin = <span class="number">1</span>.</span><br><span class="line">      L_LAST-hlevel = <span class="number">01</span>.</span><br><span class="line">      L_LAST-occmax = <span class="number">999999</span>.</span><br><span class="line">      <span class="keyword">APPEND</span> L_LAST <span class="keyword">TO</span> i_idocsyn.</span><br><span class="line">      <span class="keyword">move</span>-corresponding L_LAST <span class="keyword">to</span> i_edisyn.</span><br><span class="line">      <span class="keyword">move</span> L_LAST <span class="keyword">to</span> i_edisyn-posno.</span><br><span class="line">      <span class="keyword">append</span> i_edisyn.</span><br><span class="line">    <span class="built_in">ENDIF</span>.</span><br><span class="line">  <span class="built_in">ENDIF</span>.</span><br></pre></td></tr></table></figure><p>Since there is no <code>ORDER BY</code> in the select statement, and neither <code>sort</code> statement after the selection, the order in table <code>I_EDISYN</code> and <code>I_IDOCSYN</code> could be changed in each selection, and the <code>nr</code> field value from the last record may or may not be the maximum <code>nr</code> in the table. If the <code>nr</code> field value from the last record is not the maximum <code>nr</code> in the table as below example, the IDOC segments <code>STANDARD_SEGMENT6</code> and <code>STANDARD_SEGMENT5</code> will not be loaded into PI IDOC metadata correctly (t-code <code>IDX2</code>).  </p><pre><code>0001    STANDARD_SEGMENT10006    STANDARD_SEGMENT60005    STANDARD_SEGMENT50002    STANDARD_SEGMENT20003    STANDARD_SEGMENT30004    STANDARD_SEGMENT40005    E1IDOCENHANCEMENT</code></pre><p>In the above case, if the IDOC contains a data record with segment <code>STANDARD_SEGMENT6</code> or <code>STANDARD_SEGMENT5</code>, the IDOC metadata will not be loaded completely in PI, those data record can not be recognized, and the PI RFC function <code>IDOC_INBOUND_ASYNCHRONOUS</code> will be failed with error message <code>IDOC_ADAPTER/155: EDISDEF: Port &amp;1 segment defn &amp;2 in IDoc type &amp;3 CIM type &amp;4 do not exist</code>. So the tRFC call will be failed and can be found in t-code <code>SM58</code> in ECC.</p><h3 id="Resolution"><a href="#Resolution" class="headerlink" title="Resolution"></a>Resolution</h3><p>To fix the issue, there are two options.</p><ol><li><p>Contact SAP to fix the issue. I did a search for SAP note with function <code>IDX_META_SYNTAX_READ</code>, and didn’t find any relevant SAP noes. Client may need to submit a OSS message to SAP, and work with SAP to fix the issue.</p></li><li><p>Add a table entry in table <code>EDICONFIG</code> to make sure the IDOC segment <code>E1IDOCENHANCEMENT</code> will not be added. In the method <code>CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU</code>, it will check table <code>EDICONFIG</code> for a table entry with the current user and EDI parameter <code>NO_ENHSEND</code>. </p></li></ol><p>We can add a table entry in <code>EDICONFIG</code> for the user with EDI parameter <code>NO_ENHSEND</code> by running program <code>RBDENHANCEDDOCUSET</code>. The service user to load ECC IDOC metadata from PI could be found in the RFC destination of the PI port <code>SAP&lt;ECC&gt;</code>, which could be found via t-code <code>IDX1</code> in PI.</p><figure class="highlight abap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">METHOD</span> send_enhanced_docu.</span><br><span class="line"></span><br><span class="line">  <span class="keyword">DATA</span>: wa <span class="keyword">TYPE</span> ediconfig,</span><br><span class="line">        uname <span class="keyword">like</span> sy-uname.</span><br><span class="line"></span><br><span class="line">  <span class="built_in">IF</span> cl_rfc=&gt;is_external_direct( ) = <span class="literal">abap_true</span>. <span class="comment">" external call only</span></span><br><span class="line">    uname = cl_abap_syst=&gt;get_user_name( ).</span><br><span class="line">    <span class="keyword">SELECT</span>  <span class="keyword">SINGLE</span> * <span class="keyword">FROM</span> ediconfig</span><br><span class="line">      <span class="keyword">INTO</span> wa</span><br><span class="line">       <span class="keyword">WHERE</span> uname = uname</span><br><span class="line">        <span class="keyword">AND</span> edi_global  = <span class="string">' '</span></span><br><span class="line">        <span class="keyword">AND</span> edi_param = <span class="string">'NO_ENHSEND'</span></span><br><span class="line">        <span class="keyword">AND</span> edi_parval = <span class="string">'X'</span>.</span><br><span class="line"></span><br><span class="line">    <span class="built_in">IF</span> sy-subrc = <span class="number">0</span>.</span><br><span class="line">      send_docu = <span class="literal">abap_false</span>.</span><br><span class="line">    <span class="built_in">ELSE</span>.</span><br><span class="line">      send_docu = <span class="literal">abap_true</span>.</span><br><span class="line">    <span class="built_in">ENDIF</span>.</span><br><span class="line"></span><br><span class="line">  <span class="built_in">ELSE</span>.</span><br><span class="line">    send_docu = <span class="literal">abap_true</span>. <span class="comment">"</span></span><br><span class="line">  <span class="built_in">ENDIF</span>.</span><br><span class="line"></span><br><span class="line"><span class="built_in">ENDMETHOD</span>.</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAP </tag>
            
            <tag> IDOC </tag>
            
            <tag> PI </tag>
            
            <tag> Issue Resolution </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to send material master delta updates to external system by change pointer</title>
      <link href="/2018/03/how-to-use-change-pointer/"/>
      <content type="html"><![CDATA[<p>In this guide, I will share the steps about how to use change pointer to send the material master delta updates to external system. For demo purpose, I will write the IDOC to SAP application server file system with XML file format. </p><blockquote><p>System: ECC</p><p>Release: 740</p></blockquote><h3 id="Create-message-type-t-code-WE81"><a href="#Create-message-type-t-code-WE81" class="headerlink" title="Create message type (t-code: WE81)"></a>Create message type (t-code: WE81)</h3><p>Create message type <code>ZMATMAS_DIST</code> via t-code <code>WE81</code>. Use any short text you like</p><h3 id="Link-message-type-with-IDOC-type-t-code-WE82"><a href="#Link-message-type-with-IDOC-type-t-code-WE82" class="headerlink" title="Link message type with IDOC type (t-code: WE82)"></a>Link message type with IDOC type (t-code: WE82)</h3><p>Link the message type <code>ZMATMAS_DIST</code> with standard IDOC type <code>MATMAS05</code> and release <code>740</code></p><h3 id="Make-sure-the-change-pointer-is-activated-globally-t-code-BD61"><a href="#Make-sure-the-change-pointer-is-activated-globally-t-code-BD61" class="headerlink" title="Make sure the change pointer is activated globally (t-code: BD61)"></a>Make sure the change pointer is activated globally (t-code: BD61)</h3><p>Run t-code <code>BD61</code> to make sure the change pointer is activated globally</p><h3 id="Make-sure-the-change-pointer-is-activated-for-the-message-type-t-code-BD50"><a href="#Make-sure-the-change-pointer-is-activated-for-the-message-type-t-code-BD50" class="headerlink" title="Make sure the change pointer is activated for the message type (t-code: BD50)"></a>Make sure the change pointer is activated for the message type (t-code: BD50)</h3><p>Run t-code <code>BD50</code>, and add a new table entry for <code>ZMATMAS_DIST</code>. Select the <code>active</code> checkbox</p><h3 id="Maintain-the-change-pointer-table-fields-for-the-message-type-t-code-BD52"><a href="#Maintain-the-change-pointer-table-fields-for-the-message-type-t-code-BD52" class="headerlink" title="Maintain the change pointer table fields for the message type (t-code: BD52)"></a>Maintain the change pointer table fields for the message type (t-code: BD52)</h3><p>Run t-code <code>BD52</code>, input change pointer <code>ZMATMAS_DIST</code>, and input the table fields for which change pointer will be created. If one table field is specified here, the change pointer with the message type <code>ZMATMAS_DIST</code> will be created when the field value is changed.</p><ul><li>Object: <code>MATERIAL</code></li><li>Table name: <code>MARA, MARC, DMAKT, etc</code></li><li>Field name: <code>MEINS, MATKL, NTGEW, KEY</code></li></ul><blockquote><p>When <code>KEY</code> is used as field name, the change pointer will be created when a new table record is created/deleted.</p></blockquote><h3 id="Create-a-logical-system-if-necessary-t-code-BD54"><a href="#Create-a-logical-system-if-necessary-t-code-BD54" class="headerlink" title="Create a logical system if necessary (t-code: BD54)"></a>Create a logical system if necessary (t-code: BD54)</h3><p>Create a new logical system <code>LS_DIST</code>. You can reuse your existing logical system as well.</p><h3 id="Add-the-message-type-to-distribution-model-t-code-BD64"><a href="#Add-the-message-type-to-distribution-model-t-code-BD64" class="headerlink" title="Add the message type to distribution model (t-code: BD64)"></a>Add the message type to distribution model (t-code: BD64)</h3><p>Run t-code <code>BD64</code>. Switch to <code>Edit</code> mode. Choose <code>Create Model View</code> to create a new model view <code>E4D</code>. You can reuse your existing model view as well. </p><p>Choose <code>Add Message Type</code> to add one distribution record with message type <code>ZMATMAS_DIST</code>, sender <code>E4DCLNT100</code>, which is the logical system of current SAP system specified in t-code <code>SCC4</code>, receiver <code>LS_DIST</code> </p><h3 id="Create-a-XML-file-port-t-code-WE21"><a href="#Create-a-XML-file-port-t-code-WE21" class="headerlink" title="Create a XML file port (t-code: WE21)"></a>Create a XML file port (t-code: WE21)</h3><p>Create a XML file port <code>XMLPORT</code> via t-code <code>WE21</code>. Choose <code>Physical directory</code>, choose the directory like <code>\usr\sap\tmp\</code>, and choose <code>EDI_PATH_CREATE_MESTYP_DOCNUM</code> as the function to generate file name</p><h3 id="Maintain-the-partner-profile-t-code-WE20"><a href="#Maintain-the-partner-profile-t-code-WE20" class="headerlink" title="Maintain the partner profile (t-code: WE20)"></a>Maintain the partner profile (t-code: WE20)</h3><p>Run t-code <code>WE20</code>, create the partner profile for the logical system <code>LS_DIST</code>. Save the partner profile, click <code>Create outbound parameters</code> button to add the outbound parameters for message type <code>ZMATMAS_DIST</code>. Use receiver port <code>XMLPORT</code>, basic type <code>MATMAS05</code>, output mode <code>Transfer IDoc immediately</code> </p><h3 id="Maintain-the-additional-data-for-message-type-t-code-BD60"><a href="#Maintain-the-additional-data-for-message-type-t-code-BD60" class="headerlink" title="Maintain the additional data for message type (t-code: BD60)"></a>Maintain the additional data for message type (t-code: BD60)</h3><p>Run t-code <code>BD60</code>. Copy the record <code>MATMAS</code> to a new record <code>ZMATMAS_DIST</code>, and deselect the checkbox <code>Reducable Message Type</code>. The format function module <code>MASTERIDOC_CREATE_SMD_MATMAS</code> is used to create material IDOC from change pointer.</p><h3 id="Update-material-master-data-t-code-MM02"><a href="#Update-material-master-data-t-code-MM02" class="headerlink" title="Update material master data (t-code: MM02)"></a>Update material master data (t-code: MM02)</h3><p>Run t-code <code>MM02</code>, input material <code>P-100</code>, choose view <code>Basic Data 1</code>, change the gross weight and save the change</p><h3 id="Check-the-change-pointer-in-BDCP2-t-code-SE16"><a href="#Check-the-change-pointer-in-BDCP2-t-code-SE16" class="headerlink" title="Check the change pointer in BDCP2 (t-code: SE16)"></a>Check the change pointer in BDCP2 (t-code: SE16)</h3><p>Run t-code <code>SE16</code>, input table <code>BDCP2</code>, input message type <code>ZMATMAS_DIST</code> and execute the program. You will see that a new change pointer with message type <code>ZMATMAS_DIST</code> and blank processing status is generated.</p><h3 id="Create-IDOC-from-change-pointer-t-code-BD21"><a href="#Create-IDOC-from-change-pointer-t-code-BD21" class="headerlink" title="Create IDOC from change pointer (t-code: BD21)"></a>Create IDOC from change pointer (t-code: BD21)</h3><p>Run t-code <code>BD21</code> or run program <code>RBDMIDOC</code> manually. You can schedule the program as periodical batch job as well. Input message type <code>ZMATMAS_DIST</code> and execute the program. You will get the information message saying that <code># IDOC created and generated for the message type ZMATMAS_DIST</code>.</p><p>Run t-code <code>SE16</code>, and check the previous change pointer. You will see that the change pointer processing status is changed to <code>X</code>.</p><h3 id="Check-the-new-generated-IDOC-t-code-WE02"><a href="#Check-the-new-generated-IDOC-t-code-WE02" class="headerlink" title="Check the new generated IDOC (t-code: WE02)"></a>Check the new generated IDOC (t-code: WE02)</h3><p>Run t-code <code>WE02</code>, input the message type <code>ZMATMAS_DIST</code> and execute. You will see the new generated IDOC.</p><h3 id="Check-the-XML-file-generated-t-code-AL11"><a href="#Check-the-XML-file-generated-t-code-AL11" class="headerlink" title="Check the XML file generated (t-code: AL11)"></a>Check the XML file generated (t-code: AL11)</h3><p>Run t-code <code>AL11</code>, open the directory <code>\usr\sap\tmp\</code>. You will see that a XML file <code>ZMATMAS_DI_02496857.xml</code> was created. Open the file, and you will see the IDOC XML file details.</p>]]></content>
      
      <categories>
          
          <category> SAP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAP </tag>
            
            <tag> Interface </tag>
            
            <tag> IDOC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>GitHub website setup with Hexo in Windows</title>
      <link href="/2018/03/hexo-github-setup/"/>
      <content type="html"><![CDATA[<p>If you want to set up a GitHub website with Hexo in Windows, and you need your website set up with basic functionality, like tags, categories, about, search, theme, visitor count, comments and etc, you can follow the below guide.</p><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ol><li>Set up the account and repository in GitHub</li><li>Install Git</li><li>Install Node.js</li><li>Install Hexo</li><li>Hexo basic commands</li><li>Hexo folder structure and basic setup</li><li>Change Hexo theme</li><li>About Markdown</li><li>Link to a local image</li><li>Add the pages: tags, categories</li><li>Add the page: about me</li><li>Add search functionality</li><li>Create a new post</li><li>Deploy to GitHub</li><li>Count of Visitors</li><li>Add comments for website</li><li>Errors &amp; Tips</li><li>Links &amp; References</li></ol><h3 id="Set-up-the-account-and-repository-in-GitHub"><a href="#Set-up-the-account-and-repository-in-GitHub" class="headerlink" title="Set up the account and repository in GitHub"></a>Set up the account and repository in GitHub</h3><p>Create an account in <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>, click on the <code>Create New</code> button in the left upper corner, choose <code>New Repository</code>. </p><p>In the <code>Repository name</code>, input <code>[your_GitHub_account].github.io</code> such as “gary5496.github.io”, select the checkbox <code>Initialize this repository with a README</code>, and click on button <code>Create repository</code>.</p><p>In the home page of the new repository, choose tab <code>Settings</code>. In the <code>GitHub Pages</code> section, change <code>Source</code> from <code>None</code> to <code>master branch</code>, and click on <code>Save</code> button next to it.</p><h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><p>Git is the tool to manage your repository on GitHub.</p><p>Download the Git from <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a>, and install it.</p><p>After installation, right click on any folder, and choose <code>Git Bash Here</code> to open Git Bash. To bind your GitHub account and email to the Git tool on your local computer, run the below commands.</p><pre><code>git config --global user.name [your GitHub account]git config --global user.email [your GitHub email address]</code></pre><h3 id="Install-Node-js"><a href="#Install-Node-js" class="headerlink" title="Install Node.js"></a>Install Node.js</h3><p>Hexo is a framework based on Node.js.</p><p>Download Node.js from <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a>, and install it. Run the below command to validate the Node.js status after installation.</p><pre><code>node -v</code></pre><p>npm is the package manager for JavasSript. Run the below command to check the npm status.</p><pre><code>npm -v</code></pre><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><p>Hexo is a framework which is helpful to build a blog. See <a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a> for details.</p><p>Create a folder as the base folder for Hexo. Run <code>cmd</code> command, run <code>cd</code> to change the folder to the Hexo base folder, and run the below command to install Hexo.</p><pre><code>npm install -g hexo-cli </code></pre><p>Run the below command to install Hexo Git deployer</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>Run the below command to initialize Hexo</p><pre><code>hexo init</code></pre><h3 id="Hexo-basic-commands"><a href="#Hexo-basic-commands" class="headerlink" title="Hexo basic commands"></a>Hexo basic commands</h3><p>Initialize Hexo after installation</p><pre><code>hexo init</code></pre><p>Start Hexo server. You can stop the server by pressing Ctrl + C.</p><pre><code>hexo serverhexo s</code></pre><p>After the server start, open the below link in browser, and you can see the initial page for Hexo</p><blockquote><p><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p></blockquote><p>Create a new page, like tags, categories, about me, etc</p><pre><code>hexo new page [page_name]</code></pre><p>Create a new post</p><pre><code>hexo new [post_name]hexo n [post_name]</code></pre><p>Generate the website for .md files</p><pre><code>hexo generatehexo g</code></pre><p>Deploy the website to GitHub</p><pre><code>hexo deployhexo d</code></pre><p>Generate the website for .md files and deploy the website to GitHub</p><pre><code>hexo deploy --generatehexo d -g</code></pre><p>Clean the cache. It may be necessary after the change on a post, a page or a configuration file.</p><pre><code>hexo clean</code></pre><h3 id="Hexo-folder-structure-and-basic-setup"><a href="#Hexo-folder-structure-and-basic-setup" class="headerlink" title="Hexo folder structure and basic setup"></a>Hexo folder structure and basic setup</h3><ul><li>node_modules: the folder to save Node.js modules for Hexo</li><li>themes: the folder for themes</li><li>source: the folder to save the source markdown (.md) files</li><li>scaffolds: the folder for templates</li><li>public: the folder to save the HTML pages after generation</li><li>_config.yml: the <code>root configuration file</code></li><li>themes/[theme_name]/_config.yml: the <code>theme configuration file</code></li><li>source/_posts: the folder to save the post markdown (.md) files</li></ul><p>Update the <code>root configuration file</code> for the below parameters</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="attr">https://gary5496.github.io/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="Change-Hexo-theme"><a href="#Change-Hexo-theme" class="headerlink" title="Change Hexo theme"></a>Change Hexo theme</h3><p>Check the Hexo themes from <a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a>. </p><p>For example, if you want to download the Next theme and use it, follow the below steps.</p><p>a. Run the below command to download the Next theme to themes folder.</p><pre><code>git clone https://github.com/theme-next/hexo-theme-next themes/next</code></pre><p>b. Change the theme parameter to next in the <code>root configuration file</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><p>c. Change the parameters in the <code>theme configuration file</code> to use another scheme and add social links if necessary.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br><span class="line"></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">night</span></span><br></pre></td></tr></table></figure><p>d. Update the file <code>custom.styl</code> under folder <code>\themes\next\source\css\_custom</code>, and change the parameter as below</p><pre><code>// Custom styles.code {  color: #098;}</code></pre><h3 id="About-Markdown"><a href="#About-Markdown" class="headerlink" title="About Markdown"></a>About Markdown</h3><p>Markdown is a text-to-HTML formatting syntax for web writers. Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML). See <a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">https://www.appinn.com/markdown/</a> for Markdown syntax details.</p><p>Here is some common syntax.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*italic text*</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**bold text**</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.url.com</span>&gt;</span></span></span><br><span class="line">[<span class="string">url tile</span>](<span class="link">url address</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">### header 3</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>list item 1</span><br><span class="line"><span class="bullet">- </span>list item 2</span><br><span class="line"></span><br><span class="line">text before <span class="code">`small code block`</span> text after</span><br><span class="line"></span><br><span class="line">![<span class="string">Alt text</span>](<span class="link">/path/to/img.jpg</span>)</span><br><span class="line"></span><br><span class="line"><span class="code">    code block line 1</span></span><br><span class="line"><span class="code">    code block line 2</span></span><br></pre></td></tr></table></figure><p>You can choose a Markdown editor like <code>MarkdownPad</code> to edit Markdown files. Download it from <a href="http://www.markdownpad.com/" target="_blank" rel="noopener">http://www.markdownpad.com/</a> and install it. The editor has a preview functionality which is very helpful for editing.</p><p>Install <code>Awesomium 1.6.6 SDK</code> from <a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" target="_blank" rel="noopener">http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe</a> and restart the computer, if LivePreview is not working for MarkdownPad and the error message is <code>This view has crashed!</code></p><h3 id="Link-to-a-local-image"><a href="#Link-to-a-local-image" class="headerlink" title="Link to a local image"></a>Link to a local image</h3><p>Update the <code>root configuration file</code> as below. After the configuration change, there will be a folder created when using command <code>hexo new [post_name]</code> to create a new post, and the folder name will be the same as post name.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>You can copy your image file to the post folder, and use the below Markdown syntax to add an image in a post. With this approach, the image will be showing in the post, but it is not showing in the home page.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">alt_text</span>](<span class="link">image_name.jpg</span>)</span><br></pre></td></tr></table></figure><p>You can install the below package and then use the below Markdown syntax to add an image to a post, and the image will be showing in both the post and home page.</p><pre><code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code></pre><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset<span class="emphasis">_img image_</span>name.jpg This is an image %&#125;</span><br></pre></td></tr></table></figure><h3 id="Add-the-pages-tags-categories"><a href="#Add-the-pages-tags-categories" class="headerlink" title="Add the pages: tags, categories"></a>Add the pages: tags, categories</h3><p>Update the <code>root configuration file</code> for the directories.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br></pre></td></tr></table></figure><p>Update the <code>theme configuration file</code> for the menu parameter.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br></pre></td></tr></table></figure><p>Run the below command to create the page for tags</p><pre><code>hexo new page tags</code></pre><p>Update the file <code>\source\tags\index.md</code></p><pre><code>---title: tagsdate: 2018-03-06 14:38:05type: &quot;tags&quot;comments: false---</code></pre><p>Run the below command to create the page for categories</p><pre><code>hexo new page categories</code></pre><p>Update the file <code>\source\categories\index.md</code></p><pre><code>---title: categoriesdate: 2018-03-06 14:39:05type: &quot;categories&quot;comments: false---</code></pre><h3 id="Add-the-page-about-me"><a href="#Add-the-page-about-me" class="headerlink" title="Add the page: about me"></a>Add the page: about me</h3><p>Update the <code>theme configuration file</code> for the menu parameter.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br></pre></td></tr></table></figure><p>Run the below command to create the page for about</p><pre><code>hexo new page about</code></pre><p>Update the file <code>\source\about\index.md</code></p><pre><code>---title: about medate: 2018-03-06 14:19:41---### About meThis is my blog.</code></pre><h3 id="Add-search-functionality"><a href="#Add-search-functionality" class="headerlink" title="Add search functionality"></a>Add search functionality</h3><p>Install the Hexo search package via the below command</p><pre><code>npm install hexo-generator-searchdb --save</code></pre><p>Add the below parameters to <code>root configuration file</code>.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br></pre></td></tr></table></figure><p>Change the below parameter in <code>theme configuration file</code>.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>Run the below command to create a new post</p><pre><code>hexo new [post_name]</code></pre><p>Update the file <code>\source\_post\[post_name].md</code>. See below for example.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2018-03-06 14:19:41</span><br><span class="line">tags: [Windows]</span><br><span class="line">categories: Windows</span><br><span class="line">---</span><br><span class="line"><span class="section">###Hello</span></span><br><span class="line"></span><br><span class="line">Hello! This is my first blog.</span><br><span class="line"><span class="code">    </span></span><br><span class="line"><span class="code">    printf("Hello world!");</span></span><br></pre></td></tr></table></figure><h3 id="Deploy-to-GitHub"><a href="#Deploy-to-GitHub" class="headerlink" title="Deploy to GitHub"></a>Deploy to GitHub</h3><p>If you are using <code>HTTP</code> to deploy your website to GitHub, you may get a pop-up dialog to input your GitHub account and password when running command <code>hexo deploy</code> during deployment.</p><p>In this case, the <code>root configuration file</code> is configured as below.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/gary5496/gary5496.github.io.git</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">gary5496</span></span><br><span class="line"><span class="attr">  email:</span> <span class="string">gary5496@163.com</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>If you are using <code>SSH</code> to deploy your website to GitHub, you can follow the below steps.</p><p>a. Run the below command via Git Bash to generate a key pair.</p><pre><code>ssh-keygen -t rsa -C &quot;your_GitHub_email_address&quot;</code></pre><p>b. Use the default file path <code>C:/User/[Windows_account]/.ssh/</code>, and input the passphrase if necessary</p><p>c. Open the file <code>C:/User/[Windows_account]/.ssh/id_rsa.pub</code>, and copy the entire file content</p><p>d. Log on to GitHub, click on <code>Avatar</code> on the left upper corner, choose <code>Settings</code>, choose <code>SSH and GPG Keys</code>, click on button <code>New SSH Key</code>, input the <code>Title</code> with any value, paste the entire file content from last step as <code>Key</code>, and click on button <code>Add SSH Key</code></p><p>e. If the passphrase is not empty in the step b, and you don’t want to reenter your passphrase every time you use your SSH key, you can run the below commands to add your key to the SSH agent, which manages your SSH keys and remembers your passphrase.</p><pre><code>eval $(ssh-agent -s)ssh-add ~/.ssh/id_rsa</code></pre><p>f. Run the below command via Git Bash to check the SSH connection</p><pre><code>ssh -T git@github.com</code></pre><p>The successful result should be like below.</p><blockquote><p>Hi gary5496! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>g. Run the below command to deploy website to GitHub</p><pre><code>hexo deploy</code></pre><p>In this case, the <code>root configuration file</code> is configured as below.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:gary5496/gary5496.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="Count-of-Visitors"><a href="#Count-of-Visitors" class="headerlink" title="Count of Visitors"></a>Count of Visitors</h3><p>Open the <code>theme configuration file</code> and update the parameters as below</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  total_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_views_icon:</span> <span class="string">eye</span></span><br><span class="line"><span class="attr">  post_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure><h3 id="Add-comments-for-website"><a href="#Add-comments-for-website" class="headerlink" title="Add comments for website"></a>Add comments for website</h3><p>Create a new GitHub repository <code>website_comments</code> to save the comments for the website</p><p>Request a GitHub <code>OAuth application</code> via the link <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a>, or via navigation by <code>GitHub homepage -&gt; Avatar on the left upper corner -&gt; Settings -&gt; Developer Settings -&gt; OAuth Apps -&gt; Request a new application</code>. Input the parameters as below, and register application</p><blockquote><p>Application name: website_comments</p></blockquote><blockquote><p>Homepage URL: <a href="https://gary5496.github.io/">https://gary5496.github.io/</a></p></blockquote><blockquote><p>Authorization callback URL: <a href="https://gary5496.github.io/">https://gary5496.github.io/</a></p></blockquote><p>Note down the <code>Client ID</code> and <code>Client Secret</code> on the application page.</p><p>Update the <code>theme configuration file</code> to add the below parameters</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  clientID:</span> <span class="string">[above_client_id]</span></span><br><span class="line"><span class="attr">  clientSecret:</span> <span class="string">[above_client_secret]</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">website_comments</span></span><br><span class="line"><span class="attr">  owner:</span> <span class="string">gary5496</span></span><br><span class="line"><span class="attr">  admin:</span> <span class="string">gary5496</span></span><br><span class="line"><span class="attr">  distractionFreeMode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line"><span class="attr">  createIssueManually:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>Create a file <code>gitalk.swig</code> under folder <code>next/layout/_third-party/comments</code>. See below for the file content. </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.gitalk.enable %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> page.comments %&#125;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.css"</span>&gt;</span><br><span class="line">    &lt;script src=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">      <span class="keyword">const</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span><br><span class="line">        clientID: <span class="string">'&#123;&#123;theme.gitalk.clientID&#125;&#125;'</span>,</span><br><span class="line">        clientSecret: <span class="string">'&#123;&#123;theme.gitalk.clientSecret&#125;&#125;'</span>,</span><br><span class="line">        repo: <span class="string">'&#123;&#123;theme.gitalk.repo&#125;&#125;'</span>,</span><br><span class="line">        owner: <span class="string">'&#123;&#123;theme.gitalk.owner&#125;&#125;'</span>,</span><br><span class="line">        admin: <span class="string">'&#123;&#123;theme.gitalk.admin&#125;&#125;'</span>.split(<span class="string">','</span>),</span><br><span class="line">        id: location.pathname,</span><br><span class="line">        <span class="comment">// facebook-like distraction free mode</span></span><br><span class="line">        distractionFreeMode: <span class="string">'&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;'</span>,</span><br><span class="line">        createIssueManually: <span class="string">'&#123;&#123; theme.gitalk.createIssueManually &#125;&#125;'</span></span><br><span class="line">      &#125;)</span><br><span class="line">      gitalk.render(<span class="string">'gitalk-container'</span>)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &#123;% endif %&#125;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure><p>Update the file <code>index.swig</code> under folder <code>next/layout/_third-party/comments</code> to add the below code</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include <span class="string">'gitalk.swig'</span> %&#125;</span><br></pre></td></tr></table></figure><p>Update the file <code>comments.swig</code> under folder <code>next/layout/_partials</code> to add the below code</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.gitalk.distractionFreeMode %&#125;  </span><br><span class="line">  &lt;div id=<span class="string">"gitalk-container"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Errors-amp-Tips"><a href="#Errors-amp-Tips" class="headerlink" title="Errors &amp; Tips"></a>Errors &amp; Tips</h3><p>Error message:</p><blockquote><p>After the change on a post, a page or a configuration file, the change is not reflected on the site.</p></blockquote><p>Solution:</p><blockquote><p>Clean the cache by running the command <code>hexo clean</code></p></blockquote><p>Error message:</p><blockquote><p>The LivePreview functionality is not working for MarkdownPad editor. The error message is <code>The view has crashed!</code>.</p></blockquote><p>Solution:</p><blockquote><p>Install <code>Awesomium 1.6.6 SDK</code> from <a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" target="_blank" rel="noopener">this link</a> and restart the computer</p></blockquote><p>Error message:</p><blockquote><p>If you are using <code>SSH</code> to deploy your Hexo contents to GitHub, you got an error message <code>Could not read from remote repository</code> when you are running the command <code>hexo deploy</code> to deploy the site to GitHub via cmd.</p></blockquote><p>Solution:</p><blockquote><p>Use <code>Git Bash</code> to run the command, instead of <code>cmd</code></p></blockquote><h3 id="Links-amp-References"><a href="#Links-amp-References" class="headerlink" title="Links &amp; References"></a>Links &amp; References</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26625249</a></li><li><a href="https://codezjx.github.io/2017/07/31/hexo-guide/" target="_blank" rel="noopener">https://codezjx.github.io/2017/07/31/hexo-guide/</a></li><li><a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/theme-settings.html</a></li><li><a href="http://theme-next.iissnan.com/third-party-services.html#analytics-system" target="_blank" rel="noopener">http://theme-next.iissnan.com/third-party-services.html#analytics-system</a></li><li><a href="https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/" target="_blank" rel="noopener">https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/</a></li><li><a href="https://univer2012.github.io/2017/04/23/6how-to-insert-picture-in-hexo-blog/" target="_blank" rel="noopener">https://univer2012.github.io/2017/04/23/6how-to-insert-picture-in-hexo-blog/</a></li><li><a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="noopener">https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/</a></li><li><a href="https://www.jianshu.com/p/9be29ed2f4b7" target="_blank" rel="noopener">https://www.jianshu.com/p/9be29ed2f4b7</a></li><li><a href="https://blog.maple3142.net/2017/11/04/hexo-next-readcount/#group-7" target="_blank" rel="noopener">https://blog.maple3142.net/2017/11/04/hexo-next-readcount/#group-7</a></li></ul>]]></content>
      
      <categories>
          
          <category> Website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Website </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Excel Tips</title>
      <link href="/2018/03/excel-tips/"/>
      <content type="html"><![CDATA[<p>Below are some tips for Microsoft Excel collected during my daily work, which may be helpful for you.</p><h3 id="Add-leading-zeros-to-a-numeric-value"><a href="#Add-leading-zeros-to-a-numeric-value" class="headerlink" title="Add leading zeros to a numeric value"></a>Add leading zeros to a numeric value</h3><pre><code>=TEXT(A1,&quot;0000000000&quot;)</code></pre><h3 id="Add-leading-zeros-to-any-value"><a href="#Add-leading-zeros-to-any-value" class="headerlink" title="Add leading zeros to any value"></a>Add leading zeros to any value</h3><pre><code>=RIGHT(REPT(&quot;0&quot;,10)&amp;A2,10)</code></pre><p>The symbol <code>&amp;</code> will be used to concatenate the strings. The function <code>REPT</code> will repeat the character for times specified.</p><h3 id="Look-up-a-value-from-a-range"><a href="#Look-up-a-value-from-a-range" class="headerlink" title="Look up a value from a range"></a>Look up a value from a range</h3><pre><code>G5=VLOOKUP(&quot;string&quot;,B2:F200,2,FALSE)</code></pre><p>The above example will look up the value <code>string</code> from the first column <code>B</code> and the current row <code>5</code> of the range <code>B2:F206</code>, and the value of <code>C5</code>, which is specified by the 3rd parameter <code>2</code>, will be returned. The fourth parameter <code>FALSE</code> means exact match.</p><h3 id="Convert-an-error-value-to-blank"><a href="#Convert-an-error-value-to-blank" class="headerlink" title="Convert an error value to blank"></a>Convert an error value to blank</h3><pre><code>=IFERROR(VLOOKUP(B251,A$1:I$360,8,FALSE),&quot;&quot;)</code></pre><p>Since the <code>VLOOKUP</code> function may return an error value if the look-up is failed, we can use the <code>IFERROR</code> function to convert the error value to blank.</p><h3 id="Get-a-substring-from-a-string"><a href="#Get-a-substring-from-a-string" class="headerlink" title="Get a substring from a string"></a>Get a substring from a string</h3><pre><code>=MID(C2,2,3)</code></pre><p>The above example will get the substring from string C2. It will begin at the second position, and the length will be 3.</p><h3 id="Summarize-the-value-by-some-conditions"><a href="#Summarize-the-value-by-some-conditions" class="headerlink" title="Summarize the value by some conditions"></a>Summarize the value by some conditions</h3><pre><code>=SUMIFS(A:A,B:B,&quot;&gt;10&quot;, B:B,&quot;&lt;20&quot;)</code></pre><p>The above example will summarize the values for A column, when the value in column B is greater than 10 and less than 20.</p>]]></content>
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
