<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Closure in JavaScript</title>
      <link href="/2018/03/javascript-closure/"/>
      <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>In a function, the variables may come from global variable like <code>window</code>, local variable, or the variable of its ancestor functions. If the variable comes from its ancestor functions, it is called <code>Closure</code> in JavaScript. </p><p>There are three variable scopes: <code>Local</code>, <code>Closure</code> and <code>Global</code>. If the variable is coming from its ancestor function and the child function is still being used, the variable in the ancestor function will be saved and it will not be recycled by JavaScript garbage collection.</p><p>In JavaScript garbage collection, if the where-used list for a variable/function/object is 0, it will be recycled. Otherwise, it will be kept. If <code>Closure</code> is used and the child function is still in used, the ancestor function and its variable will be kept since the where-used list is not 0.</p><h3 id="Understand-variable-scope"><a href="#Understand-variable-scope" class="headerlink" title="Understand variable scope"></a>Understand variable scope</h3><p>In the below case, the output of <code>f1, f2, f3</code> will be all <code>16</code>, because the variable scope is <strong>finalized</strong> in the <code>return arr;</code> statement. When the statement <code>return arr;</code> is executed, the variable <code>i</code> is <code>4</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">3</span>; i++) &#123;</span><br><span class="line">        arr.push(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> i * i;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> results = count();</span><br><span class="line"><span class="keyword">var</span> f1 = results[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">var</span> f2 = results[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> f3 = results[<span class="number">2</span>];</span><br><span class="line">f1();    <span class="comment">//16</span></span><br><span class="line">f2();    <span class="comment">//16</span></span><br><span class="line">f3();    <span class="comment">//16</span></span><br></pre></td></tr></table></figure><p>To fix the issue in the above case, we can change the code as below. In the below case, the variable <code>i</code> is <strong>finalized</strong> and passed to <code>n</code> when the statement <code>(function(n){...})(i);</code> is executed. When the statement is executed, the variable <code>i</code> is <code>1, 2, 3</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=<span class="number">3</span>; i++) &#123;</span><br><span class="line">        arr.push((<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> n * n;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)(i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> results = count();</span><br><span class="line"><span class="keyword">var</span> f1 = results[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">var</span> f2 = results[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> f3 = results[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">f1(); <span class="comment">// 1</span></span><br><span class="line">f2(); <span class="comment">// 4</span></span><br><span class="line">f3(); <span class="comment">// 9</span></span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html</a><br><a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/00143449934543461c9d5dfeeb848f5b72bd012e1113d15000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/00143449934543461c9d5dfeeb848f5b72bd012e1113d15000</a></p>]]></content>
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>this keyword in JavaScript</title>
      <link href="/2018/03/javascript-this/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>After reading the below few posts about <code>this</code> variable in JavaScript. I think I have to write a post to note down my understanding about it.</p><p><a href="http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html</a><br><a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000</a></p><h3 id="Function-call"><a href="#Function-call" class="headerlink" title="Function call"></a>Function call</h3><p>In the normal function call, <code>this</code> is the global variable, which is <code>window</code> when the page is loaded in web browser. <code>test()</code> is the same as <code>window.test()</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">alert(<span class="keyword">this</span>.x);    <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>.x);</span><br><span class="line">&#125;</span><br><span class="line">test();    <span class="comment">//1</span></span><br></pre></td></tr></table></figure><h3 id="Method-call"><a href="#Method-call" class="headerlink" title="Method call"></a>Method call</h3><p>When the function is used as a method of an object, <code>this</code> is <code>reference to the object</code> when the method (function) is called.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> o = &#123;</span><br><span class="line">    x: <span class="number">2</span>,</span><br><span class="line">    method: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="keyword">this</span>.x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">o.method();    <span class="comment">//2</span></span><br></pre></td></tr></table></figure><h3 id="Constructor-function"><a href="#Constructor-function" class="headerlink" title="Constructor function"></a>Constructor function</h3><p>When the function is used as a constructor function, <code>this</code> is <code>reference to the object</code> in the construction function. </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>.x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">this</span>.method = test;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> o();</span><br><span class="line">o.method();    <span class="comment">//2</span></span><br><span class="line">test();    <span class="comment">//1</span></span><br></pre></td></tr></table></figure><h3 id="Method-apply"><a href="#Method-apply" class="headerlink" title="Method apply"></a>Method apply</h3><p>Developer can use the method <code>object.apply</code> to change the binding of <code>this</code>. </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> test = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>.x);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> o = &#123;</span><br><span class="line">    x: <span class="number">2</span>,</span><br><span class="line">    m: test</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">test();    <span class="comment">//1</span></span><br><span class="line">test.apply(o);    <span class="comment">//2</span></span><br></pre></td></tr></table></figure><h3 id="Function-call-in-method-call"><a href="#Function-call-in-method-call" class="headerlink" title="Function call in method call"></a>Function call in method call</h3><p>If <code>this</code> variable is used in a function call in an object method call, it will be the reference to <code>window</code>, instead of the <code>reference to the object</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> Foo = &#123;</span><br><span class="line">    x: <span class="number">2</span>,</span><br><span class="line">    method: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">        <span class="keyword">var</span> test = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.x);</span><br><span class="line">        &#125;</span><br><span class="line">        test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">Foo.method();    <span class="comment">//1, which is the global variable</span></span><br></pre></td></tr></table></figure><p>To set <code>this</code> to the <code>reference to the object</code> in the above case, you can use a variable like <code>that</code> to store <code>this</code> variable as below.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> Foo = &#123;</span><br><span class="line">    x: <span class="number">2</span>,</span><br><span class="line">    method: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> test = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(that.x);</span><br><span class="line">        &#125;</span><br><span class="line">        test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">Foo.method();    <span class="comment">//2, which is the global variable</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Convert InputStream to String (Java)</title>
      <link href="/2018/03/java-convert-inputstream-to-string/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>Sometimes, you would need to convert InputStream to String, and then manipulate it, such as check the String in the trace log, etc.</p><p>Here are some ways to convert an InputStream to a String. See below link for details.</p><p><a href="https://stackoverflow.com/questions/309424/read-convert-an-inputstream-to-a-string" target="_blank" rel="noopener">https://stackoverflow.com/questions/309424/read-convert-an-inputstream-to-a-string</a></p><h3 id="Ways-to-convert-an-InputStream-to-a-String"><a href="#Ways-to-convert-an-InputStream-to-a-String" class="headerlink" title="Ways to convert an InputStream to a String"></a>Ways to convert an InputStream to a String</h3><ul><li>Using IOUtils.toString (<code>Apache Utils</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String result = IOUtils.toString(inputStream, StandardCharsets.UTF_8);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String result = IOUtils.toString(inputStream, <span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><ul><li>Using CharStreams (<code>guava</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String result = CharStreams.toString(<span class="keyword">new</span> InputStreamReader(</span><br><span class="line">      inputStream, Charsets.UTF_8));</span><br></pre></td></tr></table></figure><ul><li>Using Scanner (<code>JDK</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Scanner s = <span class="keyword">new</span> Scanner(inputStream).useDelimiter(<span class="string">"\\A"</span>);</span><br><span class="line">String result = s.hasNext() ? s.next() : <span class="string">""</span>;</span><br></pre></td></tr></table></figure><ul><li>Using Stream Api (<code>Java 8</code>). Warning: This solution convert different line breaks (like <code>\r\n</code>) to <code>\n</code>.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String result = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream))</span><br><span class="line">  .lines().collect(Collectors.joining(<span class="string">"\n"</span>));</span><br></pre></td></tr></table></figure><ul><li>Using parallel Stream Api (<code>Java 8</code>). Warning: This solution convert different line breaks (like <code>\r\n</code>) to <code>\n</code>.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String result = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream)).lines()</span><br><span class="line">   .parallel().collect(Collectors.joining(<span class="string">"\n"</span>));</span><br></pre></td></tr></table></figure><ul><li>Using InputStreamReader and StringBuilder (<code>JDK</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> bufferSize = <span class="number">1024</span>;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">char</span>[] buffer = <span class="keyword">new</span> <span class="keyword">char</span>[bufferSize];</span><br><span class="line"><span class="keyword">final</span> StringBuilder out = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">Reader in = <span class="keyword">new</span> InputStreamReader(inputStream, <span class="string">"UTF-8"</span>);</span><br><span class="line"><span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">    <span class="keyword">int</span> rsz = in.read(buffer, <span class="number">0</span>, buffer.length);</span><br><span class="line">    <span class="keyword">if</span> (rsz &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    out.append(buffer, <span class="number">0</span>, rsz);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> out.toString();</span><br></pre></td></tr></table></figure><ul><li>Using StringWriter and IOUtils.copy (<code>Apache Commons</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">StringWriter writer = <span class="keyword">new</span> StringWriter();</span><br><span class="line">IOUtils.copy(inputStream, writer, <span class="string">"UTF-8"</span>);</span><br><span class="line"><span class="keyword">return</span> writer.toString();</span><br></pre></td></tr></table></figure><ul><li>Using ByteArrayOutputStream and inputStream.read (<code>JDK</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ByteArrayOutputStream result = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> length;</span><br><span class="line"><span class="keyword">while</span> ((length = inputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">    result.write(buffer, <span class="number">0</span>, length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// StandardCharsets.UTF_8.name() &gt; JDK 7</span></span><br><span class="line"><span class="keyword">return</span> result.toString(<span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><ul><li>Using BufferedReader (<code>JDK</code>). Warning: This solution convert different line breaks (like <code>\n\r</code>) to <code>line.separator</code> system property (for example, in Windows to “\r\n”).</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">String newLine = System.getProperty(<span class="string">"line.separator"</span>);</span><br><span class="line">BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream));</span><br><span class="line">StringBuilder result = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">String line; <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">    result.append(flag? newLine: <span class="string">""</span>).append(line);</span><br><span class="line">    flag = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result.toString();</span><br></pre></td></tr></table></figure><ul><li>Using BufferedInputStream and ByteArrayOutputStream (<code>JDK</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(inputStream);</span><br><span class="line">ByteArrayOutputStream buf = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line"><span class="keyword">int</span> result = bis.read();</span><br><span class="line"><span class="keyword">while</span>(result != -<span class="number">1</span>) &#123;</span><br><span class="line">    buf.write((<span class="keyword">byte</span>) result);</span><br><span class="line">    result = bis.read();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// StandardCharsets.UTF_8.name() &gt; JDK 7</span></span><br><span class="line"><span class="keyword">return</span> buf.toString(<span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><ul><li>Using inputStream.read() and StringBuilder (<code>JDK</code>). Warning: This solution has problem with Unicode, for example with Russian text (work correctly only with non-Unicode text)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ch;</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="keyword">while</span>((ch = inputStream.read()) != -<span class="number">1</span>)</span><br><span class="line">    sb.append((<span class="keyword">char</span>)ch);</span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br></pre></td></tr></table></figure><h3 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h3><ol><li><p>Solutions <code>4</code>, <code>5</code> and <code>9</code> convert different line breaks to one.</p></li><li><p>Solution <code>11</code> can’t work correctly with Unicode text</p></li></ol><h3 id="Performance-tests"><a href="#Performance-tests" class="headerlink" title="Performance tests"></a>Performance tests</h3><p>Performance tests for small <code>String</code> (length = 175), url in github (mode = Average Time, system = Linux, score 1,343 is the best):</p><pre><code>              Benchmark                         Mode  Cnt   Score   Error  Units 8. ByteArrayOutputStream and read (JDK)        avgt   10   1,343 ± 0,028  us/op 6. InputStreamReader and StringBuilder (JDK)   avgt   10   6,980 ± 0,404  us/op10. BufferedInputStream, ByteArrayOutputStream  avgt   10   7,437 ± 0,735  us/op11. InputStream.read() and StringBuilder (JDK)  avgt   10   8,977 ± 0,328  us/op 7. StringWriter and IOUtils.copy (Apache)      avgt   10  10,613 ± 0,599  us/op 1. IOUtils.toString (Apache Utils)             avgt   10  10,605 ± 0,527  us/op 3. Scanner (JDK)                               avgt   10  12,083 ± 0,293  us/op 2. CharStreams (guava)                         avgt   10  12,999 ± 0,514  us/op 4. Stream Api (Java 8)                         avgt   10  15,811 ± 0,605  us/op 9. BufferedReader (JDK)                        avgt   10  16,038 ± 0,711  us/op 5. parallel Stream Api (Java 8)                avgt   10  21,544 ± 0,583  us/op</code></pre><p>Performance tests for big <code>String</code> (length = 50100), url in github (mode = Average Time, system = Linux, score 200,715 is the best):</p><pre><code>               Benchmark                        Mode  Cnt   Score        Error  Units 8. ByteArrayOutputStream and read (JDK)        avgt   10   200,715 ±   18,103  us/op 1. IOUtils.toString (Apache Utils)             avgt   10   300,019 ±    8,751  us/op 6. InputStreamReader and StringBuilder (JDK)   avgt   10   347,616 ±  130,348  us/op 7. StringWriter and IOUtils.copy (Apache)      avgt   10   352,791 ±  105,337  us/op 2. CharStreams (guava)                         avgt   10   420,137 ±   59,877  us/op 9. BufferedReader (JDK)                        avgt   10   632,028 ±   17,002  us/op 5. parallel Stream Api (Java 8)                avgt   10   662,999 ±   46,199  us/op 4. Stream Api (Java 8)                         avgt   10   701,269 ±   82,296  us/op10. BufferedInputStream, ByteArrayOutputStream  avgt   10   740,837 ±    5,613  us/op 3. Scanner (JDK)                               avgt   10   751,417 ±   62,026  us/op11. InputStream.read() and StringBuilder (JDK)  avgt   10  2919,350 ± 1101,942  us/op</code></pre><p>Performance test (Average Time) depending on Input Stream length in Windows 7 system:</p><pre><code>length  182    546     1092    3276    9828    29484   58968test8  0.38    0.938   1.868   4.448   13.412  36.459  72.708test4  2.362   3.609   5.573   12.769  40.74   81.415  159.864test5  3.881   5.075   6.904   14.123  50.258  129.937 166.162test9  2.237   3.493   5.422   11.977  45.98   89.336  177.39test6  1.261   2.12    4.38    10.698  31.821  86.106  186.636test7  1.601   2.391   3.646   8.367   38.196  110.221 211.016test1  1.529   2.381   3.527   8.411   40.551  105.16  212.573test3  3.035   3.934   8.606   20.858  61.571  118.744 235.428test2  3.136   6.238   10.508  33.48   43.532  118.044 239.481test10 1.593   4.736   7.527   20.557  59.856  162.907 323.147test11 3.913   11.506  23.26   68.644  207.591 600.444 1211.545</code></pre><h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><p>After you manipulate the InputStream first time, the “cursor” position will be moved to the last of the InputStream. As a result, if you try to manipulate it again, the result will be incorrect. </p><p>If you need to manipulate an InputStream multiple times, you have to run the below codes to reset/reopen it.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">InputStream inputStream = <span class="keyword">new</span> FileInputStream(<span class="string">"in.dat"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// first processing</span></span><br><span class="line">String result = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream))</span><br><span class="line">  .lines().collect(Collectors.joining(<span class="string">"\n"</span>));</span><br><span class="line"></span><br><span class="line">System.out.println(result);</span><br><span class="line"></span><br><span class="line"><span class="comment">// the below code will be required to manipulate FileInputStream multiple times</span></span><br><span class="line">inputStream.close();</span><br><span class="line">inputStream = <span class="keyword">new</span> FileInputStream(<span class="string">"in.dat"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// the below code will be required to manipulate ByteArrayInputStream multiple times</span></span><br><span class="line"><span class="comment">//inputStream.reset();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//second processing</span></span><br><span class="line">String result2 = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream))</span><br><span class="line">  .lines().collect(Collectors.joining(<span class="string">"\n"</span>));</span><br><span class="line"></span><br><span class="line">System.out.println(result2);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PI IDOC metadata issue in Java Stack</title>
      <link href="/2018/03/pi-idoc-metadata-issue-js/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>The PI channel using adapter module <code>IDOCXmlToFlatConvertor</code> with <code>SAPRelease 46C</code> is failed with error message <code>Unable to get meta data for IDOC type &lt;IDOC_TYPE&gt;: SEGMENT_UNKNOWN</code>. </p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>The adapter module <code>IDOCXmlToFlatConvertor</code> is using IDOC metadata in Java stack to transform IDOC from XML format to flat file format. We tried to load the IDOC metadata in PI NWA (Java stack) manually with the <code>Connection Factory</code> and <code>SAPRelease</code> parameters maintained in the PI channel, and the load is failed with error message <code>Service node &lt;node&gt; is not accessible; metadata cannot be shown or manipulated</code>. </p><p>After RFC trace, we find that the ECC RFC function <code>IDOCTYPE_READ_COMPLETE</code> is called by PI when loading IDOC metadata in Java stack. The RFC function is changed in the recent upgrade. In the new change, if the return result of <code>CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( )</code> is true, it will add a new IDOC segment <code>E1IDOCENHANCEMENT</code>, which is valid since release 700 (t-code <code>WE31</code>). Since the new IDOC segment is not valid in release <code>46C</code>, the RFC function will be failed, which causes the failure of PI channel.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">IF CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( ) = abap_true.</span><br><span class="line">  READ TABLE LT_SYNTAX WITH KEY SEGTYP = CL_IDOC_PORT_DEF=&gt;ENH_SEGMENT TRANSPORTING NO FIELDS.</span><br><span class="line">  IF sy-subrc &lt;&gt; 0.</span><br><span class="line">    DESCRIBE TABLE LT_SYNTAX LINES COUNT.</span><br><span class="line">    READ TABLE lt_syntax INDEX COUNT INTO l_LAST.</span><br><span class="line">    L_LAST-nr = L_LAST-nr + 1.</span><br><span class="line">    l_LAST-segtyp = CL_IDOC_PORT_DEF=&gt;enh_segment.</span><br><span class="line">    CLEAR: L_LAST-parseg, L_LAST-refsegtyp, L_LAST-mustfl, l_last-parpno.</span><br><span class="line">    L_LAST-occmin = 1.</span><br><span class="line">    L_LAST-hlevel = 01.</span><br><span class="line">    L_LAST-occmax = 999999.</span><br><span class="line">    APPEND L_LAST TO lt_syntax.</span><br><span class="line">  ENDIF.</span><br><span class="line">ENDIF.</span><br></pre></td></tr></table></figure><h3 id="Resolution"><a href="#Resolution" class="headerlink" title="Resolution"></a>Resolution</h3><p>To fix the issue, we can maintain a new entry in table EDICONFIG, so that the return result of <code>CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( )</code> is false. With this change, the new IDOC segment will not be added, and it will fix the issue. A table entry in <code>EDICONFIG</code> for the service user with EDI parameter <code>NO_ENHSEND</code> is added by running program <code>RBDENHANCEDDOCUSET</code>. The service user to load IDOC metadata from PI Java stack could be found in the <code>Connection Factory</code> in NWA.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">METHOD send_enhanced_docu.</span><br><span class="line"></span><br><span class="line">  DATA: wa TYPE ediconfig,</span><br><span class="line">        uname like sy-uname.</span><br><span class="line"></span><br><span class="line">  IF cl_rfc=&gt;is_external_direct( ) = abap_true. &quot; external call only</span><br><span class="line">    uname = cl_abap_syst=&gt;get_user_name( ).</span><br><span class="line">    SELECT  SINGLE * FROM ediconfig</span><br><span class="line">      INTO wa</span><br><span class="line">       WHERE uname = uname</span><br><span class="line">        AND edi_global  = &apos; &apos;</span><br><span class="line">        AND edi_param = &apos;NO_ENHSEND&apos;</span><br><span class="line">        AND edi_parval = &apos;X&apos;.</span><br><span class="line"></span><br><span class="line">    IF sy-subrc = 0.</span><br><span class="line">      send_docu = abap_false.</span><br><span class="line">    ELSE.</span><br><span class="line">      send_docu = abap_true.</span><br><span class="line">    ENDIF.</span><br><span class="line"></span><br><span class="line">  ELSE.</span><br><span class="line">    send_docu = abap_true. &quot;</span><br><span class="line">  ENDIF.</span><br><span class="line"></span><br><span class="line">ENDMETHOD.</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAP </tag>
            
            <tag> IDOC </tag>
            
            <tag> PI </tag>
            
            <tag> Issue Resolution </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PI IDOC metadata issue with error message IDOC_ADAPTER/155</title>
      <link href="/2018/03/pi-idoc-metadata-issue/"/>
      <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>In ECC tRFC monitor (t-code: <code>SM58</code>), user finds that there are failed tRFC calls to PI system with error message <code>IDOC_ADAPTER/155: EDISDEF: Port &amp;1 segment defn &amp;2 in IDoc type &amp;3 CIM type &amp;4 do not exist</code>. </p><blockquote><p>ECC version: 7.50 SP9<br>PI version: 7.40</p></blockquote><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>When a ECC IDOC with PI tRFC port is dispatched, the RFC function  <code>IDOC_INBOUND_ASYNCHRONOUS</code> is called in PI. In PI, it will run the function module with the below call stack. In the below last step, it will call RFC function  <code>IDX_META_SYNTAX_READ</code> to read IDOC metadata from ECC.</p><pre><code>FUNCTION IDOC_INBOUND_ASYNCHRONOUSFUNCTION IDX_INBOUND_XMBFORM idx_inboundFORM idx_inbound_idocFUNCTION IDX_IDOC_TO_XMLFUNCTION IDX_SYNTAX_CHECKFUNCTION IDX_STRUCTURE_GET    FUNCTION IDX_META_SYNTAX_READ</code></pre><p>In the RFC function <code>IDX_META_SYNTAX_READ</code>, it will read the IDOC metadata from database table <code>EDISYN</code> into internal table <code>I_EDISYN</code>, and then add them to internal table <code>I_IDOCSYN</code>. If <code>CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( )</code> returns true, it will read the last record of <code>I_IDOCSYN</code>, use the <code>nr</code> field value of the last record, add <code>1</code>, use it as the <code>nr</code> for the new segment <code>E1IDOCENHANCEMENT</code>, and add the new segment to <code>I_IDOCSYN</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">    select * from edisyn into table i_edisyn</span><br><span class="line">                         where idoctyp eq doctyp</span><br><span class="line">                         and   cimtyp  eq cimtyp.</span><br><span class="line">    if sy-subrc ne 0. &quot;muß edisyn noch gemerged werden?</span><br><span class="line">      ....</span><br><span class="line">    endif.&quot;EDISYN</span><br><span class="line">* nun kann man aus der i_edisyn i_idocsyn füllen</span><br><span class="line">    loop at i_edisyn.</span><br><span class="line">      clear i_idocsyn.</span><br><span class="line">      move-corresponding i_edisyn to i_idocsyn.</span><br><span class="line">      move i_edisyn-posno to i_idocsyn-nr.</span><br><span class="line">      append i_idocsyn.</span><br><span class="line">    endloop.</span><br><span class="line">  endif.&quot;cimtyp</span><br><span class="line"></span><br><span class="line">  IF CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU( ) = abap_true.</span><br><span class="line">    READ TABLE i_idocsyn WITH KEY SEGTYP = CL_IDOC_PORT_DEF=&gt;ENH_SEGMENT TRANSPORTING NO FIELDS.</span><br><span class="line">    IF sy-subrc &lt;&gt; 0.</span><br><span class="line">      DESCRIBE TABLE i_idocsyn LINES COUNT.</span><br><span class="line">      READ TABLE i_idocsyn INDEX COUNT INTO l_LAST.</span><br><span class="line">      L_LAST-nr = L_LAST-nr + 1.</span><br><span class="line">      l_LAST-segtyp = CL_IDOC_PORT_DEF=&gt;enh_segment.</span><br><span class="line">      CLEAR: L_LAST-parseg,  L_LAST-mustfl, l_last-parpno.</span><br><span class="line">      L_LAST-occmin = 1.</span><br><span class="line">      L_LAST-hlevel = 01.</span><br><span class="line">      L_LAST-occmax = 999999.</span><br><span class="line">      APPEND L_LAST TO i_idocsyn.</span><br><span class="line">      move-corresponding L_LAST to i_edisyn.</span><br><span class="line">      move L_LAST to i_edisyn-posno.</span><br><span class="line">      append i_edisyn.</span><br><span class="line">    ENDIF.</span><br><span class="line">  ENDIF.</span><br></pre></td></tr></table></figure><p>Since there is no <code>ORDER BY</code> in the select statement, and neither <code>sort</code> statement after the selection, the order in table <code>I_EDISYN</code> and <code>I_IDOCSYN</code> could be changed in each selection, and the <code>nr</code> field value from the last record may or may not be the maximum <code>nr</code> in the table. If the <code>nr</code> field value from the last record is not the maximum <code>nr</code> in the table as below example, the IDOC segments <code>STANDARD_SEGMENT6</code> and <code>STANDARD_SEGMENT5</code> will not be loaded into PI IDOC metadata correctly (t-code <code>IDX2</code>).  </p><pre><code>0001    STANDARD_SEGMENT10006    STANDARD_SEGMENT60005    STANDARD_SEGMENT50002    STANDARD_SEGMENT20003    STANDARD_SEGMENT30004    STANDARD_SEGMENT40005    E1IDOCENHANCEMENT</code></pre><p>In the above case, if the IDOC contains a data record with segment <code>STANDARD_SEGMENT6</code> or <code>STANDARD_SEGMENT5</code>, the IDOC metadata will not be loaded completely in PI, those data record can not be recognized, and the PI RFC function <code>IDOC_INBOUND_ASYNCHRONOUS</code> will be failed with error message <code>IDOC_ADAPTER/155: EDISDEF: Port &amp;1 segment defn &amp;2 in IDoc type &amp;3 CIM type &amp;4 do not exist</code>. So the tRFC call will be failed and can be found in t-code <code>SM58</code> in ECC.</p><h3 id="Resolution"><a href="#Resolution" class="headerlink" title="Resolution"></a>Resolution</h3><p>To fix the issue, there are two options.</p><ol><li><p>Contact SAP to fix the issue. I did a search for SAP note with function <code>IDX_META_SYNTAX_READ</code>, and didn’t find any relevant SAP noes. Client may need to submit a OSS message to SAP, and work with SAP to fix the issue.</p></li><li><p>Add a table entry in table <code>EDICONFIG</code> to make sure the IDOC segment <code>E1IDOCENHANCEMENT</code> will not be added. In the method <code>CL_IDOC_PORT_DEF=&gt;SEND_ENHANCED_DOCU</code>, it will check table <code>EDICONFIG</code> for a table entry with the current user and EDI parameter <code>NO_ENHSEND</code>. </p></li></ol><p>We can add a table entry in <code>EDICONFIG</code> for the user with EDI parameter <code>NO_ENHSEND</code> by running program <code>RBDENHANCEDDOCUSET</code>. The service user to load ECC IDOC metadata from PI could be found in the RFC destination of the PI port <code>SAP&lt;ECC&gt;</code>, which could be found via t-code <code>IDX1</code> in PI.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">METHOD send_enhanced_docu.</span><br><span class="line"></span><br><span class="line">  DATA: wa TYPE ediconfig,</span><br><span class="line">        uname like sy-uname.</span><br><span class="line"></span><br><span class="line">  IF cl_rfc=&gt;is_external_direct( ) = abap_true. &quot; external call only</span><br><span class="line">    uname = cl_abap_syst=&gt;get_user_name( ).</span><br><span class="line">    SELECT  SINGLE * FROM ediconfig</span><br><span class="line">      INTO wa</span><br><span class="line">       WHERE uname = uname</span><br><span class="line">        AND edi_global  = &apos; &apos;</span><br><span class="line">        AND edi_param = &apos;NO_ENHSEND&apos;</span><br><span class="line">        AND edi_parval = &apos;X&apos;.</span><br><span class="line"></span><br><span class="line">    IF sy-subrc = 0.</span><br><span class="line">      send_docu = abap_false.</span><br><span class="line">    ELSE.</span><br><span class="line">      send_docu = abap_true.</span><br><span class="line">    ENDIF.</span><br><span class="line"></span><br><span class="line">  ELSE.</span><br><span class="line">    send_docu = abap_true. &quot;</span><br><span class="line">  ENDIF.</span><br><span class="line"></span><br><span class="line">ENDMETHOD.</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> PI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAP </tag>
            
            <tag> IDOC </tag>
            
            <tag> PI </tag>
            
            <tag> Issue Resolution </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to send material master delta updates to external system by change pointer</title>
      <link href="/2018/03/how-to-use-change-pointer/"/>
      <content type="html"><![CDATA[<p>In this guide, I will share the steps about how to use change pointer to send the material master delta updates to external system. For demo purpose, I will write the IDOC to SAP application server file system with XML file format. </p><blockquote><p>System: ECC</p><p>Release: 740</p></blockquote><h3 id="Create-message-type-t-code-WE81"><a href="#Create-message-type-t-code-WE81" class="headerlink" title="Create message type (t-code: WE81)"></a>Create message type (t-code: WE81)</h3><p>Create message type <code>ZMATMAS_DIST</code> via t-code <code>WE81</code>. Use any short text you like</p><h3 id="Link-message-type-with-IDOC-type-t-code-WE82"><a href="#Link-message-type-with-IDOC-type-t-code-WE82" class="headerlink" title="Link message type with IDOC type (t-code: WE82)"></a>Link message type with IDOC type (t-code: WE82)</h3><p>Link the message type <code>ZMATMAS_DIST</code> with standard IDOC type <code>MATMAS05</code> and release <code>740</code></p><h3 id="Make-sure-the-change-pointer-is-activated-globally-t-code-BD61"><a href="#Make-sure-the-change-pointer-is-activated-globally-t-code-BD61" class="headerlink" title="Make sure the change pointer is activated globally (t-code: BD61)"></a>Make sure the change pointer is activated globally (t-code: BD61)</h3><p>Run t-code <code>BD61</code> to make sure the change pointer is activated globally</p><h3 id="Make-sure-the-change-pointer-is-activated-for-the-message-type-t-code-BD50"><a href="#Make-sure-the-change-pointer-is-activated-for-the-message-type-t-code-BD50" class="headerlink" title="Make sure the change pointer is activated for the message type (t-code: BD50)"></a>Make sure the change pointer is activated for the message type (t-code: BD50)</h3><p>Run t-code <code>BD50</code>, and add a new table entry for <code>ZMATMAS_DIST</code>. Select the <code>active</code> checkbox</p><h3 id="Maintain-the-change-pointer-table-fields-for-the-message-type-t-code-BD52"><a href="#Maintain-the-change-pointer-table-fields-for-the-message-type-t-code-BD52" class="headerlink" title="Maintain the change pointer table fields for the message type (t-code: BD52)"></a>Maintain the change pointer table fields for the message type (t-code: BD52)</h3><p>Run t-code <code>BD52</code>, input change pointer <code>ZMATMAS_DIST</code>, and input the table fields for which change pointer will be created. If one table field is specified here, the change pointer with the message type <code>ZMATMAS_DIST</code> will be created when the field value is changed.</p><ul><li>Object: <code>MATERIAL</code></li><li>Table name: <code>MARA, MARC, DMAKT, etc</code></li><li>Field name: <code>MEINS, MATKL, NTGEW, KEY</code></li></ul><blockquote><p>When <code>KEY</code> is used as field name, the change pointer will be created when a new table record is created/deleted.</p></blockquote><h3 id="Create-a-logical-system-if-necessary-t-code-BD54"><a href="#Create-a-logical-system-if-necessary-t-code-BD54" class="headerlink" title="Create a logical system if necessary (t-code: BD54)"></a>Create a logical system if necessary (t-code: BD54)</h3><p>Create a new logical system <code>LS_DIST</code>. You can reuse your existing logical system as well.</p><h3 id="Add-the-message-type-to-distribution-model-t-code-BD64"><a href="#Add-the-message-type-to-distribution-model-t-code-BD64" class="headerlink" title="Add the message type to distribution model (t-code: BD64)"></a>Add the message type to distribution model (t-code: BD64)</h3><p>Run t-code <code>BD64</code>. Switch to <code>Edit</code> mode. Choose <code>Create Model View</code> to create a new model view <code>E4D</code>. You can reuse your existing model view as well. </p><p>Choose <code>Add Message Type</code> to add one distribution record with message type <code>ZMATMAS_DIST</code>, sender <code>E4DCLNT100</code>, which is the logical system of current SAP system specified in t-code <code>SCC4</code>, receiver <code>LS_DIST</code> </p><h3 id="Create-a-XML-file-port-t-code-WE21"><a href="#Create-a-XML-file-port-t-code-WE21" class="headerlink" title="Create a XML file port (t-code: WE21)"></a>Create a XML file port (t-code: WE21)</h3><p>Create a XML file port <code>XMLPORT</code> via t-code <code>WE21</code>. Choose <code>Physical directory</code>, choose the directory like <code>\usr\sap\tmp\</code>, and choose <code>EDI_PATH_CREATE_MESTYP_DOCNUM</code> as the function to generate file name</p><h3 id="Maintain-the-partner-profile-t-code-WE20"><a href="#Maintain-the-partner-profile-t-code-WE20" class="headerlink" title="Maintain the partner profile (t-code: WE20)"></a>Maintain the partner profile (t-code: WE20)</h3><p>Run t-code <code>WE20</code>, create the partner profile for the logical system <code>LS_DIST</code>. Save the partner profile, click <code>Create outbound parameters</code> button to add the outbound parameters for message type <code>ZMATMAS_DIST</code>. Use receiver port <code>XMLPORT</code>, basic type <code>MATMAS05</code>, output mode <code>Transfer IDoc immediately</code> </p><h3 id="Maintain-the-additional-data-for-message-type-t-code-BD60"><a href="#Maintain-the-additional-data-for-message-type-t-code-BD60" class="headerlink" title="Maintain the additional data for message type (t-code: BD60)"></a>Maintain the additional data for message type (t-code: BD60)</h3><p>Run t-code <code>BD60</code>. Copy the record <code>MATMAS</code> to a new record <code>ZMATMAS_DIST</code>, and deselect the checkbox <code>Reducable Message Type</code>. The format function module <code>MASTERIDOC_CREATE_SMD_MATMAS</code> is used to create material IDOC from change pointer.</p><h3 id="Update-material-master-data-t-code-MM02"><a href="#Update-material-master-data-t-code-MM02" class="headerlink" title="Update material master data (t-code: MM02)"></a>Update material master data (t-code: MM02)</h3><p>Run t-code <code>MM02</code>, input material <code>P-100</code>, choose view <code>Basic Data 1</code>, change the gross weight and save the change</p><h3 id="Check-the-change-pointer-in-BDCP2-t-code-SE16"><a href="#Check-the-change-pointer-in-BDCP2-t-code-SE16" class="headerlink" title="Check the change pointer in BDCP2 (t-code: SE16)"></a>Check the change pointer in BDCP2 (t-code: SE16)</h3><p>Run t-code <code>SE16</code>, input table <code>BDCP2</code>, input message type <code>ZMATMAS_DIST</code> and execute the program. You will see that a new change pointer with message type <code>ZMATMAS_DIST</code> and blank processing status is generated.</p><h3 id="Create-IDOC-from-change-pointer-t-code-BD21"><a href="#Create-IDOC-from-change-pointer-t-code-BD21" class="headerlink" title="Create IDOC from change pointer (t-code: BD21)"></a>Create IDOC from change pointer (t-code: BD21)</h3><p>Run t-code <code>BD21</code> or run program <code>RBDMIDOC</code> manually. You can schedule the program as periodical batch job as well. Input message type <code>ZMATMAS_DIST</code> and execute the program. You will get the information message saying that <code># IDOC created and generated for the message type ZMATMAS_DIST</code>.</p><p>Run t-code <code>SE16</code>, and check the previous change pointer. You will see that the change pointer processing status is changed to <code>X</code>.</p><h3 id="Check-the-new-generated-IDOC-t-code-WE02"><a href="#Check-the-new-generated-IDOC-t-code-WE02" class="headerlink" title="Check the new generated IDOC (t-code: WE02)"></a>Check the new generated IDOC (t-code: WE02)</h3><p>Run t-code <code>WE02</code>, input the message type <code>ZMATMAS_DIST</code> and execute. You will see the new generated IDOC.</p><h3 id="Check-the-XML-file-generated-t-code-AL11"><a href="#Check-the-XML-file-generated-t-code-AL11" class="headerlink" title="Check the XML file generated (t-code: AL11)"></a>Check the XML file generated (t-code: AL11)</h3><p>Run t-code <code>AL11</code>, open the directory <code>\usr\sap\tmp\</code>. You will see that a XML file <code>ZMATMAS_DI_02496857.xml</code> was created. Open the file, and you will see the IDOC XML file details.</p>]]></content>
      
      <categories>
          
          <category> SAP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAP </tag>
            
            <tag> Interface </tag>
            
            <tag> IDOC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>GitHub website setup with Hexo in Windows</title>
      <link href="/2018/03/hexo-github-setup/"/>
      <content type="html"><![CDATA[<p>If you want to set up a GitHub website with Hexo in Windows, and you need your website set up with basic functionality, like tags, categories, about, search, theme, visitor count, comments and etc, you can follow the below guide.</p><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ol><li>Set up the account and repository in GitHub</li><li>Install Git</li><li>Install Node.js</li><li>Install Hexo</li><li>Hexo basic commands</li><li>Hexo folder structure and basic setup</li><li>Change Hexo theme</li><li>About Markdown</li><li>Link to a local image</li><li>Add the pages: tags, categories</li><li>Add the page: about me</li><li>Add search functionality</li><li>Create a new post</li><li>Deploy to GitHub</li><li>Count of Visitors</li><li>Add comments for website</li><li>Errors &amp; Tips</li><li>Links &amp; References</li></ol><h3 id="Set-up-the-account-and-repository-in-GitHub"><a href="#Set-up-the-account-and-repository-in-GitHub" class="headerlink" title="Set up the account and repository in GitHub"></a>Set up the account and repository in GitHub</h3><p>Create an account in <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>, click on the <code>Create New</code> button in the left upper corner, choose <code>New Repository</code>. </p><p>In the <code>Repository name</code>, input <code>[your_GitHub_account].github.io</code> such as “gary5496.github.io”, select the checkbox <code>Initialize this repository with a README</code>, and click on button <code>Create repository</code>.</p><p>In the home page of the new repository, choose tab <code>Settings</code>. In the <code>GitHub Pages</code> section, change <code>Source</code> from <code>None</code> to <code>master branch</code>, and click on <code>Save</code> button next to it.</p><h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><p>Git is the tool to manage your repository on GitHub.</p><p>Download the Git from <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a>, and install it.</p><p>After installation, right click on any folder, and choose <code>Git Bash Here</code> to open Git Bash. To bind your GitHub account and email to the Git tool on your local computer, run the below commands.</p><pre><code>git config --global user.name [your GitHub account]git config --global user.email [your GitHub email address]</code></pre><h3 id="Install-Node-js"><a href="#Install-Node-js" class="headerlink" title="Install Node.js"></a>Install Node.js</h3><p>Hexo is a framework based on Node.js.</p><p>Download Node.js from <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a>, and install it. Run the below command to validate the Node.js status after installation.</p><pre><code>node -v</code></pre><p>npm is the package manager for JavasSript. Run the below command to check the npm status.</p><pre><code>npm -v</code></pre><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><p>Hexo is a framework which is helpful to build a blog. See <a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a> for details.</p><p>Create a folder as the base folder for Hexo. Run <code>cmd</code> command, run <code>cd</code> to change the folder to the Hexo base folder, and run the below command to install Hexo.</p><pre><code>npm install -g hexo-cli </code></pre><p>Run the below command to install Hexo Git deployer</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>Run the below command to initialize Hexo</p><pre><code>hexo init</code></pre><p>Run the below command to start Hexo server. You can stop the server by pressing Ctrl + C.</p><pre><code>hexo server</code></pre><p>After the server start, open the below link in browser, and you can see the initial page for Hexo</p><blockquote><p><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p></blockquote><h3 id="Hexo-basic-commands"><a href="#Hexo-basic-commands" class="headerlink" title="Hexo basic commands"></a>Hexo basic commands</h3><p>Initialize Hexo after installation</p><pre><code>hexo init</code></pre><p>Start Hexo server</p><pre><code>hexo serverhexo s</code></pre><p>Create a new page, like tags, categories, about me, etc</p><pre><code>hexo new page [page_name]</code></pre><p>Create a new post</p><pre><code>hexo new [post_name]hexo n [post_name]</code></pre><p>Generate the website for .md files</p><pre><code>hexo generatehexo g</code></pre><p>Deploy the website to GitHub</p><pre><code>hexo deployhexo d</code></pre><p>Generate the website for .md files and deploy the website to GitHub</p><pre><code>hexo deploy --generatehexo d -g</code></pre><p>Clean the cache. It may be necessary after the change on a post, a page or a configuration file.</p><pre><code>hexo clean</code></pre><h3 id="Hexo-folder-structure-and-basic-setup"><a href="#Hexo-folder-structure-and-basic-setup" class="headerlink" title="Hexo folder structure and basic setup"></a>Hexo folder structure and basic setup</h3><ul><li>node_modules: the folder to save Node.js modules for Hexo</li><li>themes: the folder for themes</li><li>source: the folder to save the source markdown (.md) files</li><li>scaffolds: the folder for templates</li><li>public: the folder to save the HTML pages after generation</li><li>_config.yml: the <code>root configuration file</code></li><li>themes/[theme_name]/_config.yml: the <code>theme configuration file</code></li><li>source/_posts: the folder to save the post markdown (.md) files</li></ul><p>Update the <code>root configuration file</code> for the below parameters</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="attr">https://gary5496.github.io/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="Change-Hexo-theme"><a href="#Change-Hexo-theme" class="headerlink" title="Change Hexo theme"></a>Change Hexo theme</h3><p>Check the Hexo themes from <a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a>. </p><p>For example, if you want to download the Next theme and use it, follow the below steps.</p><p>a. Run the below command to download the Next theme to themes folder.</p><pre><code>git clone https://github.com/theme-next/hexo-theme-next themes/next</code></pre><p>b. Change the theme parameter to next in the <code>root configuration file</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><p>c. Change the parameters in the <code>theme configuration file</code> to use another scheme and add social links if necessary.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/gary5496</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line"><span class="attr">  E-Mail:</span> <span class="attr">mailto:gary5496@163.com</span> <span class="string">||</span> <span class="string">envelope</span></span><br><span class="line"></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">night</span></span><br></pre></td></tr></table></figure><p>d. Update the file <code>custom.styl</code> under folder <code>\themes\next\source\css\_custom</code>, and change the parameter as below</p><pre><code>// Custom styles.code {  color: #098;}</code></pre><h3 id="About-Markdown"><a href="#About-Markdown" class="headerlink" title="About Markdown"></a>About Markdown</h3><p>Markdown is a text-to-HTML formatting syntax for web writers. Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML). See <a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">https://www.appinn.com/markdown/</a> for Markdown syntax details.</p><p>Here is some common syntax.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*italic text*</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**bold text**</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"></span><br><span class="line">&lt;http://www.url.com&gt;</span><br><span class="line"></span><br><span class="line"><span class="section">### header 3</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>list item 1</span><br><span class="line"><span class="bullet">- </span>list item 2</span><br><span class="line"></span><br><span class="line">text before <span class="code">`small code block`</span> text after</span><br><span class="line"></span><br><span class="line">![<span class="string">Alt text</span>](<span class="link">/path/to/img.jpg</span>)</span><br><span class="line"></span><br><span class="line"><span class="code">code block line 1</span></span><br><span class="line"><span class="code">code block line 2</span></span><br></pre></td></tr></table></figure><p>You can choose a Markdown editor like <code>MarkdownPad</code> to edit Markdown files. Download it from <a href="http://www.markdownpad.com/" target="_blank" rel="noopener">http://www.markdownpad.com/</a> and install it. The editor has a preview functionality which is very helpful for editing.</p><p>Install <code>Awesomium 1.6.6 SDK</code> from <a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" target="_blank" rel="noopener">http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe</a> and restart the computer, if LivePreview is not working for MarkdownPad and the error message is <code>This view has crashed!</code></p><h3 id="Link-to-a-local-image"><a href="#Link-to-a-local-image" class="headerlink" title="Link to a local image"></a>Link to a local image</h3><p>Update the <code>root configuration file</code> as below. After the configuration change, there will be a folder created when using command <code>hexo new [post_name]</code> to create a new post, and the folder name will be the same as post name.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>You can copy your image file to the post folder, and use the below Markdown syntax to add an image in a post. With this approach, the image will be showing in the post, but it is not showing in the home page.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">alt_text</span>](<span class="link">image_name.jpg</span>)</span><br></pre></td></tr></table></figure><p>You can install the below package and then use the below Markdown syntax to add an image to a post, and the image will be showing in both the post and home page.</p><pre><code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code></pre><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset<span class="emphasis">_img image_</span>name.jpg This is an image %&#125;</span><br></pre></td></tr></table></figure><h3 id="Add-the-pages-tags-categories"><a href="#Add-the-pages-tags-categories" class="headerlink" title="Add the pages: tags, categories"></a>Add the pages: tags, categories</h3><p>Update the <code>root configuration file</code> for the directories.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br></pre></td></tr></table></figure><p>Update the <code>theme configuration file</code> for the menu parameter.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br></pre></td></tr></table></figure><p>Run the below command to create the page for tags</p><pre><code>hexo new page tags</code></pre><p>Update the file <code>\source\tags\index.md</code></p><pre><code>---title: tagsdate: 2018-03-06 14:38:05type: &quot;tags&quot;comments: false---</code></pre><p>Run the below command to create the page for categories</p><pre><code>hexo new page categories</code></pre><p>Update the file <code>\source\categories\index.md</code></p><pre><code>---title: categoriesdate: 2018-03-06 14:39:05type: &quot;categories&quot;comments: false---</code></pre><h3 id="Add-the-page-about-me"><a href="#Add-the-page-about-me" class="headerlink" title="Add the page: about me"></a>Add the page: about me</h3><p>Update the <code>theme configuration file</code> for the menu parameter.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br></pre></td></tr></table></figure><p>Run the below command to create the page for about</p><pre><code>hexo new page about</code></pre><p>Update the file <code>\source\about\index.md</code></p><pre><code>---title: about medate: 2018-03-06 14:19:41---### About meThis is my blog.</code></pre><h3 id="Add-search-functionality"><a href="#Add-search-functionality" class="headerlink" title="Add search functionality"></a>Add search functionality</h3><p>Install the Hexo search package via the below command</p><pre><code>npm install hexo-generator-searchdb --save</code></pre><p>Add the below parameters to <code>root configuration file</code>.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br></pre></td></tr></table></figure><p>Change the below parameter in <code>theme configuration file</code>.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>Run the below command to create a new post</p><pre><code>hexo new [post_name]</code></pre><p>Update the file <code>\source\_post\[post_name].md</code>. See below for example.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2018-03-06 14:19:41</span><br><span class="line">tags: [Windows]</span><br><span class="line">categories: Windows</span><br><span class="line">---</span><br><span class="line"><span class="section">###Hello</span></span><br><span class="line"></span><br><span class="line">Hello! This is my first blog.</span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">printf("Hello world!");</span></span><br></pre></td></tr></table></figure><h3 id="Deploy-to-GitHub"><a href="#Deploy-to-GitHub" class="headerlink" title="Deploy to GitHub"></a>Deploy to GitHub</h3><p>If you are using <code>HTTP</code> to deploy your website to GitHub, you may get a pop-up dialog to input your GitHub account and password when running command <code>hexo deploy</code> during deployment.</p><p>In this case, the <code>root configuration file</code> is configured as below.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="attr">https://github.com/gary5496/gary5496.github.io.git</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">gary5496</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">gary5496@163.com</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>If you are using <code>SSH</code> to deploy your website to GitHub, you can follow the below steps.</p><p>a. Run the below command via Git Bash to generate a key pair.</p><pre><code>ssh-keygen -t rsa -C &quot;your_GitHub_email_address&quot;</code></pre><p>b. Use the default file path <code>C:/User/[Windows_account]/.ssh/</code>, and input the passphrase if necessary</p><p>c. Open the file <code>C:/User/[Windows_account]/.ssh/id_rsa.pub</code>, and copy the entire file content</p><p>d. Log on to GitHub, click on <code>Avatar</code> on the left upper corner, choose <code>Settings</code>, choose <code>SSH and GPG Keys</code>, click on button <code>New SSH Key</code>, input the <code>Title</code> with any value, paste the entire file content from last step as <code>Key</code>, and click on button <code>Add SSH Key</code></p><p>e. If the passphrase is not empty in the step b, and you don’t want to reenter your passphrase every time you use your SSH key, you can run the below commands to add your key to the SSH agent, which manages your SSH keys and remembers your passphrase.</p><pre><code>eval $(ssh-agent -s)ssh-add ~/.ssh/id_rsa</code></pre><p>f. Run the below command via Git Bash to check the SSH connection</p><pre><code>ssh -T git@github.com</code></pre><p>The successful result should be like below.</p><blockquote><p>Hi gary5496! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>g. Run the below command to deploy website to GitHub</p><pre><code>hexo deploy</code></pre><p>In this case, the <code>root configuration file</code> is configured as below.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">git@github.com:gary5496/gary5496.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="Count-of-Visitors"><a href="#Count-of-Visitors" class="headerlink" title="Count of Visitors"></a>Count of Visitors</h3><p>Add a project in <a href="https://console.firebase.google.com/u/0/" target="_blank" rel="noopener">https://console.firebase.google.com/u/0/</a>, input any <code>Project Name</code>, choose a <code>Country/Region</code>, and <code>Create project</code>.</p><p>Once the project is created, choose <code>DEVELOP -&gt; Database</code> in the left side menu, click on <code>Get started</code> of <code>Cloud Firestore Beta</code> in the right side, and choose the second option <code>Start in test mode</code> and click on <code>Enable</code> to start the database.</p><p>Click on the <code>Project Overview</code> in the left side menu, and choose <code>Project settings</code>. Note down <code>Project ID</code> and <code>Web API Key</code>.</p><p>Open the <code>theme configuration file</code> and update the parameters as below</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">firestore:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  collection:</span> <span class="string">articles</span> <span class="comment">#required, a string collection name to access firestore database</span></span><br><span class="line"><span class="attr">  apiKey:</span> <span class="string">[your_web_api_key]</span></span><br><span class="line"><span class="attr">  projectId:</span> <span class="string">[your_project_id]</span></span><br><span class="line"><span class="attr">  bluebird:</span> <span class="literal">false</span> <span class="comment">#enable this if you want to include bluebird 3.5.1(core version) Promise polyfill</span></span><br></pre></td></tr></table></figure><h3 id="Add-comments-for-website"><a href="#Add-comments-for-website" class="headerlink" title="Add comments for website"></a>Add comments for website</h3><p>Create a new GitHub repository <code>website_comments</code> to save the comments for the website</p><p>Request a GitHub <code>OAuth application</code> via the link <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a>, or via navigation by <code>GitHub homepage -&gt; Avatar on the left upper corner -&gt; Settings -&gt; Developer Settings -&gt; OAuth Apps -&gt; Request a new application</code>. Input the parameters as below, and register application</p><blockquote><p>Application name: website_comments</p></blockquote><blockquote><p>Homepage URL: <a href="https://gary5496.github.io/">https://gary5496.github.io/</a></p></blockquote><blockquote><p>Authorization callback URL: <a href="https://gary5496.github.io/">https://gary5496.github.io/</a></p></blockquote><p>Note down the <code>Client ID</code> and <code>Client Secret</code> on the application page.</p><p>Update the <code>theme configuration file</code> to add the below parameters</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  clientID:</span> <span class="string">[above_client_id]</span></span><br><span class="line"><span class="attr">  clientSecret:</span> <span class="string">[above_client_secret]</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">website_comments</span></span><br><span class="line"><span class="attr">  owner:</span> <span class="string">gary5496</span></span><br><span class="line"><span class="attr">  admin:</span> <span class="string">gary5496</span></span><br><span class="line"><span class="attr">  distractionFreeMode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line"><span class="attr">  createIssueManually:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>Create a file <code>gitalk.swig</code> under folder <code>next/layout/_third-party/comments</code>. See below for the file content. </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% <span class="keyword">if</span> theme.gitalk.enable %&#125;  <span class="comment">//_config.yml文件若没有添加enable: true可删除该判断</span></span><br><span class="line"></span><br><span class="line">    &#123;% <span class="keyword">if</span> theme.gitalk.distractionFreeMode  %&#125;      </span><br><span class="line">      &lt;link rel=<span class="string">'stylesheet'</span> href=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.css"</span>&gt;</span><br><span class="line">      &lt;script src=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">      &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">          <span class="keyword">var</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span><br><span class="line">            clientID:  <span class="string">'&#123;&#123;theme.gitalk.clientID&#125;&#125;'</span>, </span><br><span class="line">            clientSecret: <span class="string">'&#123;&#123;theme.gitalk.clientSecret&#125;&#125;'</span>,</span><br><span class="line">            id: <span class="built_in">window</span>.location.pathname,</span><br><span class="line">            repo: <span class="string">'&#123;&#123;theme.gitalk.repo&#125;&#125;'</span>, </span><br><span class="line">            owner: <span class="string">'&#123;&#123;theme.gitalk.owner&#125;&#125;'</span>, </span><br><span class="line">            admin: <span class="string">'&#123;&#123;theme.gitalk.admin&#125;&#125;'</span>, </span><br><span class="line">            distractionFreeMode: <span class="string">'&#123;&#123;theme.gitalk.distractionFreeMode&#125;&#125;'</span>,</span><br><span class="line">          &#125;)</span><br><span class="line">          gitalk.render(<span class="string">'gitalk-container'</span>)</span><br><span class="line">      &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">    &#123;% endif %&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  &#123;% endif %&#125;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure><p>Update the file <code>index.swig</code> under folder <code>next/layout/_third-party/comments</code> to add the below code</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include <span class="string">'gitalk.swig'</span> %&#125;</span><br></pre></td></tr></table></figure><p>Update the file <code>comments.swig</code> under folder <code>next/layout/_partials</code> to add the below code</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.gitalk.distractionFreeMode %&#125;  </span><br><span class="line">  &lt;div id=<span class="string">"gitalk-container"</span>&gt;&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="Errors-amp-Tips"><a href="#Errors-amp-Tips" class="headerlink" title="Errors &amp; Tips"></a>Errors &amp; Tips</h3><p>Error message:</p><blockquote><p>After the change on a post, a page or a configuration file, the change is not reflected on the site.</p></blockquote><p>Solution:</p><blockquote><p>Clean the cache by running the command <code>hexo clean</code></p></blockquote><p>Error message:</p><blockquote><p>The LivePreview functionality is not working for MarkdownPad editor. The error message is <code>The view has crashed!</code>.</p></blockquote><p>Solution:</p><blockquote><p>Install <code>Awesomium 1.6.6 SDK</code> from <a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" target="_blank" rel="noopener">this link</a> and restart the computer</p></blockquote><p>Error message:</p><blockquote><p>If you are using <code>SSH</code> to deploy your Hexo contents to GitHub, you got an error message <code>Could not read from remote repository</code> when you are running the command <code>hexo deploy</code> to deploy the site to GitHub via cmd.</p></blockquote><p>Solution:</p><blockquote><p>Use <code>Git Bash</code> to run the command, instead of <code>cmd</code></p></blockquote><h3 id="Links-amp-References"><a href="#Links-amp-References" class="headerlink" title="Links &amp; References"></a>Links &amp; References</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26625249</a></li><li><a href="https://codezjx.github.io/2017/07/31/hexo-guide/" target="_blank" rel="noopener">https://codezjx.github.io/2017/07/31/hexo-guide/</a></li><li><a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/theme-settings.html</a></li><li><a href="http://theme-next.iissnan.com/third-party-services.html#analytics-system" target="_blank" rel="noopener">http://theme-next.iissnan.com/third-party-services.html#analytics-system</a></li><li><a href="https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/" target="_blank" rel="noopener">https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/</a></li><li><a href="https://univer2012.github.io/2017/04/23/6how-to-insert-picture-in-hexo-blog/" target="_blank" rel="noopener">https://univer2012.github.io/2017/04/23/6how-to-insert-picture-in-hexo-blog/</a></li><li><a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="noopener">https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/</a></li><li><a href="https://www.jianshu.com/p/9be29ed2f4b7" target="_blank" rel="noopener">https://www.jianshu.com/p/9be29ed2f4b7</a></li><li><a href="https://blog.maple3142.net/2017/11/04/hexo-next-readcount/#group-7" target="_blank" rel="noopener">https://blog.maple3142.net/2017/11/04/hexo-next-readcount/#group-7</a></li></ul>]]></content>
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Excel Tips</title>
      <link href="/2018/03/excel-tips/"/>
      <content type="html"><![CDATA[<p>Below are some tips for Microsoft Excel collected during my daily work, which may be helpful for you.</p><h3 id="Add-leading-zeros-to-a-numeric-value"><a href="#Add-leading-zeros-to-a-numeric-value" class="headerlink" title="Add leading zeros to a numeric value"></a>Add leading zeros to a numeric value</h3><pre><code>=TEXT(A1,&quot;0000000000&quot;)</code></pre><h3 id="Add-leading-zeros-to-any-value"><a href="#Add-leading-zeros-to-any-value" class="headerlink" title="Add leading zeros to any value"></a>Add leading zeros to any value</h3><pre><code>=RIGHT(REPT(&quot;0&quot;,10)&amp;A2,10)</code></pre><p>The symbol <code>&amp;</code> will be used to concatenate the strings. The function <code>REPT</code> will repeat the character for times specified.</p><h3 id="Look-up-a-value-from-a-range"><a href="#Look-up-a-value-from-a-range" class="headerlink" title="Look up a value from a range"></a>Look up a value from a range</h3><pre><code>G5=VLOOKUP(&quot;string&quot;,B2:F200,2,FALSE)</code></pre><p>The above example will look up the value <code>string</code> from the first column <code>B</code> and the current row <code>5</code> of the range <code>B2:F206</code>, and the value of <code>C5</code>, which is specified by the 3rd parameter <code>2</code>, will be returned. The fourth parameter <code>FALSE</code> means exact match.</p><h3 id="Convert-an-error-value-to-blank"><a href="#Convert-an-error-value-to-blank" class="headerlink" title="Convert an error value to blank"></a>Convert an error value to blank</h3><pre><code>=IFERROR(VLOOKUP(B251,A$1:I$360,8,FALSE),&quot;&quot;)</code></pre><p>Since the <code>VLOOKUP</code> function may return an error value if the look-up is failed, we can use the <code>IFERROR</code> function to convert the error value to blank.</p><h3 id="Get-a-substring-from-a-string"><a href="#Get-a-substring-from-a-string" class="headerlink" title="Get a substring from a string"></a>Get a substring from a string</h3><pre><code>=MID(C2,2,3)</code></pre><p>The above example will get the substring from string C2. It will begin at the second position, and the length will be 3.</p><h3 id="Summarize-the-value-by-some-conditions"><a href="#Summarize-the-value-by-some-conditions" class="headerlink" title="Summarize the value by some conditions"></a>Summarize the value by some conditions</h3><pre><code>=SUMIFS(A:A,B:B,&quot;&gt;10&quot;, B:B,&quot;&lt;20&quot;)</code></pre><p>The above example will summarize the values for A column, when the value in column B is greater than 10 and less than 20.</p>]]></content>
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
